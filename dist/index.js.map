{"version":3,"file":"index.js","sources":["../src/components/ChatEngine/Utilities/timezone.js","../src/components/Context/index.js","../src/actions/index.js","../src/actions/auth.js","../src/components/Sockets/Socket/DataLoader.js","../src/components/Sockets/Socket/getOrCreateSession.js","../src/components/Sockets/Socket/Socket4.js","../src/components/Sockets/Socket/index.js","../src/components/Sockets/ChatSocket/ChatSocket.js","../src/components/ChatEngine/ChatList/ChatLoader.js","../src/components/ChatEngine/ChatList/NewChatForm/index.js","../src/components/ChatEngine/ChatList/ChatCard/Loading.js","../src/components/ChatEngine/components/Effects/Boop/index.js","../src/components/ChatEngine/components/Effects/Boop/useBoop.js","../src/components/ChatEngine/ChatList/ChatCard/index.js","../src/components/ChatEngine/ChatList/index.js","../src/components/ChatEngine/ChatFeed/Steps/AuthFail/index.js","../src/actions/chats/newChat.js","../src/components/ChatEngine/components/Input/TextInput/index.js","../src/components/ChatEngine/components/Input/AutocompleteInput/index.js","../src/components/ChatEngine/components/Button/index.js","../src/components/ChatEngine/ChatFeed/Steps/CreateChat/index.js","../src/components/ChatEngine/ChatFeed/Steps/IceBreaker/index.js","../src/components/ChatEngine/ChatFeed/Triggers/RenderTrigger.js","../src/components/ChatEngine/ChatFeed/ChatHeader/ChatListDrawerButton.js","../src/components/ChatEngine/ChatSettings/PeopleSettings/PersonRow/index.js","../src/components/ChatEngine/ChatSettings/PeopleSettings/PersonForm/PersonOption/index.js","../src/components/ChatEngine/ChatSettings/PeopleSettings/PersonForm/index.js","../src/components/ChatEngine/ChatSettings/SettingsBlock/index.js","../src/components/ChatEngine/ChatSettings/PeopleSettings/index.js","../src/components/ChatEngine/ChatFeed/Messages/Bubble/file.js","../src/components/ChatEngine/ChatSettings/PhotosSettings/Thumbnail.js","../src/components/ChatEngine/ChatSettings/PhotosSettings/index.js","../src/components/ChatEngine/ChatSettings/OptionsSettings/index.js","../src/components/ChatEngine/ChatSettings/ChatSettingsTop/TitleForm/index.js","../src/components/ChatEngine/ChatSettings/ChatSettingsTop/index.js","../src/components/ChatEngine/ChatSettings/index.js","../src/components/ChatEngine/ChatFeed/ChatHeader/ChatSettingsDrawerButton.js","../src/components/ChatEngine/ChatFeed/ChatHeader/index.js","../src/components/ChatEngine/ChatFeed/ChatHeader/ChatListDrawer.js","../src/components/ChatEngine/ChatFeed/ChatHeader/ChatSettingsDrawer.js","../src/components/ChatEngine/ChatFeed/Messages/DatePartition/index.js","../src/components/ChatEngine/ChatFeed/Messages/Bubble/Thumbnail.js","../src/components/ChatEngine/ChatFeed/Messages/Bubble/FileView.js","../src/components/ChatEngine/Utilities/colorMapping.js","../src/components/ChatEngine/components/Avatar/Dot/index.js","../src/components/ChatEngine/ChatFeed/Messages/Bubble/Body.js","../src/components/ChatEngine/ChatFeed/Messages/Bubble/MyMessage.js","../src/components/ChatEngine/ChatFeed/Messages/Bubble/TheirMessage.js","../src/components/ChatEngine/ChatFeed/Messages/Bubble/index.js","../src/components/ChatEngine/ChatFeed/Messages/index.js","../src/components/ChatEngine/ChatFeed/IsTyping/index.js","../src/components/ChatEngine/ChatFeed/NewMessageForm/isImage.js","../src/components/ChatEngine/ChatFeed/NewMessageForm/FilePreview.js","../src/components/ChatEngine/ChatFeed/NewMessageForm/FilesRow.js","../src/components/ChatEngine/ChatFeed/NewMessageForm/Thumbnail.js","../src/components/ChatEngine/ChatFeed/NewMessageForm/ImagesRow.js","../src/components/ChatEngine/ChatFeed/NewMessageForm/AttachmentsInput.js","../src/components/ChatEngine/ChatFeed/NewMessageForm/SendButton.js","../src/components/ChatEngine/ChatFeed/NewMessageForm/NextQuill.js","../src/components/ChatEngine/ChatFeed/NewMessageForm/index.js","../src/components/ChatEngine/ChatFeed/ConnectionBar/index.js","../src/components/ChatEngine/ChatFeed/ScrollDownBar/index.js","../src/components/ChatEngine/ChatFeed/index.js","../src/components/ChatEngine/index.js","../src/components/ChatEngine/components/Avatar/Avatar/index.js","../src/components/ChatEngine/ChatFeed/MessageFormSocial/ImagesInput.js","../src/components/ChatEngine/ChatFeed/MessageFormSocial/MessageInput.js","../src/components/ChatEngine/ChatFeed/MessageFormSocial/index.js","../src/components/index.js","../src/components/Sockets/ChatSocket/index.js","../src/actions/people/addPerson.js","../src/actions/chats/deleteChat.js","../src/actions/messages/deleteMessage.js","../src/actions/chats/editChat.js","../src/actions/messages/editMessage.js","../src/actions/people/editMyData.js","../src/actions/chats/getChat.js","../src/actions/chats/getChats.js","../src/actions/chats/getChatsBefore.js","../src/actions/chats/getLatestChats.js","../src/actions/messages/getLatestMessages.js","../src/actions/messages/getMessage.js","../src/actions/messages/getMessages.js","../src/actions/people/getMyData.js","../src/actions/chats/getOrCreateChat.js","../src/actions/people/getOtherPeople.js","../src/actions/typing/isTyping.js","../src/actions/people/leaveChat.js","../src/actions/messages/readMessage.js","../src/actions/people/removePerson.js","../src/actions/messages/sendMessage.js"],"sourcesContent":["export function getDateTime(date) {\n    if (!date) {\n        return new Date();\n    }\n\n    let dateObj = new Date(date);\n    if (isNaN(dateObj.getFullYear())) {\n        dateObj = new Date(date.replace(' ', 'T'));\n    }\n\n    return (dateObj);\n}\n\nexport function formatTime(dateObj) {\n    var time = dateObj.toLocaleString('en-US')\n    return time.split(' ')[1].slice(0, -3) + ' ' + time.slice(-2)\n}\n\nexport function formatDate(dateObj) {\n    return dateObj.toLocaleString('en-US')\n}\n\nexport function formatDateTime(dateObj) {\n    return formatTime(dateObj) + ', ' + formatDate(dateObj)\n}\n\nexport function formatDateTimeAgo(dateObj) {\n    return dateObj.toString().substr(4, 6)\n}\n","import React, { useState, createContext } from 'react'\n\nimport {\n    formatTime as internalFormatTime,\n    formatDate as internalFormatDate,\n    formatDateTime as internalFormatDateTime,\n    formatDateTimeAgo as internalFormatDateTimeAgo,\n} from '../ChatEngine/Utilities/timezone';\n\nexport const ChatEngineContext = createContext()\n\nexport const ChatEngineWrapper = props => {\n    const [connecting, setConnecting] = useState(true)\n    const [conn, setConn] = useState(null)\n    const [creds, setCreds] = useState(null)\n    const [sessionToken, setSessionToken] = useState('')\n    const [chats, setChats] = useState(null)\n    const [messages, setMessages] = useState({})\n    const [activeChat, setActiveChat] = useState(null)\n    const [typingCounter, setTypingCounter] = useState({})\n    const [loadMoreMessages, setLoadMoreMessages] = useState(false)\n    const [isBottomVisible, setIsBottomVisible] = useState(false)\n\n    const translate = (text, component, dom) => {\n        if (!props.translate) return (dom || text);\n\n        const translated = props.translate(text, component, dom);\n        if (!translated && typeof translated !== 'string') {\n            return (dom || text);\n        }\n\n        return (translated);\n    };\n\n    const formatDateTime = (dateObj, format) => {\n        if (props.formatDateTime) {\n            return (props.formatDateTime(dateObj, format));\n        }\n\n        switch (format) {\n            case 'date':\n                return (internalFormatDate(dateObj));\n            case 'time':\n                return (internalFormatTime(dateObj));\n            case 'datetime':\n                return (internalFormatDateTime(dateObj));\n            case 'ago':\n                return (internalFormatDateTimeAgo(dateObj));\n            default:\n                return ('');\n        }\n    };\n\n    const openAttachment = (attachment, type) => {\n        if (props.openAttachment) {\n            props.openAttachment(attachment, type);\n        } else {\n            window.open(attachment.file)\n        }\n    };\n\n    const htmlMessageTransform = typeof props.htmlMessageTransform === 'function' ? props.htmlMessageTransform : null;\n    const onMessageSent = typeof props.onMessageSent === 'function' ? props.onMessageSent : null;\n\n    const value = {\n        connecting, setConnecting,\n        conn, setConn,\n        creds, setCreds,\n        sessionToken, setSessionToken,\n        chats, setChats,\n        messages, setMessages,\n        activeChat, setActiveChat,\n        typingCounter, setTypingCounter,\n        loadMoreMessages, setLoadMoreMessages,\n        isBottomVisible, setIsBottomVisible,\n        userCallbacks: {\n            translate,\n            formatDateTime,\n            openAttachment,\n            htmlMessageTransform,\n            onMessageSent,\n        },\n    }\n\n    return (\n        <ChatEngineContext.Provider value={value}>\n            {props.children}\n        </ChatEngineContext.Provider>\n    )\n}\n","export function getApiUrl(props) { \n    if (props && props.development) {\n        return 'http://127.0.0.1:8000'\n    }\n    return 'https://api.chatengine.io'\n}\n","export function getHeaders(props) { \n    if (!props) {\n        return\n\n    } else if (props.chatID) {\n        return { \n            \"public-key\": props.publicKey ? props.publicKey : props.projectID,\n            \"chat-id\": props.chatID,\n            \"access-key\": props.chatAccessKey,\n        }\n        \n    } else {\n        return { \n            \"Public-Key\": props.publicKey ? props.publicKey : props.projectID,\n            \"User-Name\": props.userName,\n            \"User-Secret\": props.userPassword ? props.userPassword : props.userSecret,\n        }\n    }\n}\n","import React, { useContext, useEffect, useRef } from 'react'\n\nimport {\n  ChatEngineContext,\n  getLatestChats,\n  getLatestMessages\n} from 'react-chat-engine'\nimport { getOrCreateSession } from './getOrCreateSession'\n\nimport { getDateTime } from '../../ChatEngine/Utilities/timezone'\n\nconst DataLoader = (props) => {\n  const didMountRef = useRef(false)\n\n  const {\n    setConn,\n    setCreds,\n    setSessionToken,\n    setChats,\n    setActiveChat,\n    setMessages\n  } = useContext(ChatEngineContext)\n\n  useEffect(() => {\n    if (!didMountRef.current) {\n      didMountRef.current = true\n      getSession()\n      getLatestChats(props, 25, (chats) => onGetChats(chats))\n    }\n  })\n\n  function getSession() {\n    getOrCreateSession(\n      props,\n      (data) => {\n        setConn(props)\n        setCreds(props)\n        setSessionToken(data.token)\n      },\n      (e) => {\n        if (e.response && e.response.status === 403) {\n          console.log(\n            `Your login credentials were not correct: \\n\n                        Project ID: ${props.projectID} \\n\n                        Username: ${props.userName} \\n\n                        User Secret: ${props.userSecret}\\n\n                        Double check these credentials to make sure they're correct.\\n\n                        If all three are correct, try resetting the username and secret in the Online Dashboard or Private API.`\n          )\n          setConn(undefined)\n          setCreds(undefined)\n          props.onFailAuth && props.onFailAuth(props)\n        }\n        setTimeout(() => getSession(), 3000) // Try again\n      }\n    )\n  }\n\n  function sortChats(chats) {\n    return Object.values(chats).sort((a, b) => {\n      const aDate = a.last_message.created\n        ? getDateTime(a.last_message.created)\n        : getDateTime(a.created)\n      const bDate = b.last_message.created\n        ? getDateTime(b.last_message.created)\n        : getDateTime(b.created)\n        return (bDate.getTime() - aDate.getTime());\n    })\n  }\n\n  function onGetChats(chats) {\n    const sortedChats = sortChats(chats)\n    const activeChatID = sortedChats[0] ? parseInt(sortedChats[0].id) : 0\n\n    setChats(_.mapKeys(chats, 'id'))\n    setActiveChat(activeChatID)\n\n    getLatestMessages(props, activeChatID, 45, (id, list) => {\n      setMessages(_.mapKeys(list, 'created'))\n    })\n  }\n\n  return <div />\n}\n\nexport default DataLoader\n","import axios from 'axios'\nimport * as str from '../../../actions'\nimport { getHeaders } from '../../../actions/auth'\n\nexport function getOrCreateSession(props, callback, errorFunc) {\n    axios.get(\n        `${str.getApiUrl(props)}/users/me/session/`,\n        { headers: getHeaders(props) }\n    )\n\n        .then((response) => {\n            callback && callback(response.data)\n        })\n\n        .catch((error) => {\n            console.log('Get or Create Session Error', error)\n            errorFunc && errorFunc(error)\n        });\n}","import React, { useContext, useState, useEffect } from 'react'\n\nimport {\n  ChatEngineContext,\n  getLatestChats,\n  getLatestMessages,\n  readMessage\n} from 'react-chat-engine'\n\nimport { getDateTime } from '../../ChatEngine/Utilities/timezone'\n\nimport { WebSocket } from 'nextjs-websocket'\n\nlet socketRef = undefined\nlet pingIntervalID = 0\nlet timeIntervalID = 0\n\nconst pingInterval = 4000\nconst minLag = 15 * 1000\nconst reconnect = Date.now() + 10 * 1000\n\nconst Socket = (props) => {\n  const [now, setNow] = useState(Date.now())\n  const [shouldPongBy, setShouldPongBy] = useState(Date.now() + minLag)\n\n  const {\n    connecting,\n    setConnecting,\n    conn,\n    sessionToken,\n    chats,\n    setChats,\n    messages,\n    setMessages,\n    activeChat,\n    setActiveChat,\n    typingCounter,\n    setTypingCounter,\n    isBottomVisible\n  } = useContext(ChatEngineContext)\n\n  useEffect(() => {\n    if (now > shouldPongBy) {\n      console.log('pingIntervalID', pingIntervalID)\n      console.log('timeIntervalID', timeIntervalID)\n      console.log('shouldPongBy', shouldPongBy)\n      console.log('now', now)\n\n      setConnecting(true)\n      props.reRender && props.reRender()\n      setShouldPongBy(Date.now() + minLag)\n    }\n  }, [now, shouldPongBy])\n\n  useEffect(() => {\n    return () => {\n      clearInterval(pingIntervalID)\n      clearInterval(timeIntervalID)\n    }\n  }, [])\n\n  function sortChats(chats) {\n    return Object.values(chats).sort((a, b) => {\n      const aDate = a.last_message.created\n        ? getDateTime(a.last_message.created)\n        : getDateTime(a.created)\n      const bDate = b.last_message.created\n        ? getDateTime(b.last_message.created)\n        : getDateTime(b.created)\n      return (bDate.getTime() - aDate.getTime());\n    })\n  }\n\n  function onConnect(conn) {\n    console.log('connected')\n    setConnecting(false)\n\n    if (connecting) {\n      // We might need to fuze timeIntervalID and pingIntervalID into one\n      pingIntervalID = setInterval(() => {\n        try {\n          socketRef.sendMessage(JSON.stringify('ping'))\n        } catch (e) {\n          console.log('Socker error', e)\n        }\n      }, pingInterval)\n      timeIntervalID = setInterval(() => setNow(Date.now()), 1000)\n    }\n\n    getLatestChats(conn, 25, (chats) => setChats(_.mapKeys(chats, 'id')))\n    // If this wasn't the first connection\n    if (Date.now() > reconnect || conn.renderChatFeed) {\n      // TODO: This conn.renderChatFeed is a hacky patch\n      getLatestMessages(conn, activeChat, 45, (id, list) => {\n        setMessages({ ...messages, ..._.mapKeys(list, 'created') })\n      })\n    }\n\n    props.onConnect && props.onConnect(conn)\n  }\n\n  function handleEditChat(chat) {\n    if (chats) {\n      const newChats = { ...chats }\n      newChats[chat.id] = chat\n      setChats(newChats)\n    }\n\n    props.onEditChat && props.onEditChat(chat)\n  }\n\n  async function handleEvent(event) {\n    const eventJSON = JSON.parse(event)\n\n    if (eventJSON.action === 'pong') {\n      setShouldPongBy(Date.now() + minLag)\n    } else if (eventJSON.action === 'new_chat') {\n      const chat = eventJSON.data\n\n      if (chats) {\n        const newChats = { ...chats }\n        newChats[chat.id] = chat\n        setChats(newChats)\n        setActiveChat(chat.id)\n      }\n\n      props.onNewChat && props.onNewChat(eventJSON.data)\n    } else if (eventJSON.action === 'edit_chat') {\n      handleEditChat(eventJSON.data)\n    } else if (eventJSON.action === 'delete_chat') {\n      const chat = eventJSON.data\n\n      if (chats) {\n        chats[chat.id] = undefined\n\n        setChats(chats)\n\n        if (!_.isEmpty(chats)) {\n          const sortedChats = sortChats(chats)\n          setActiveChat(sortedChats[0] ? parseInt(sortedChats[0].id) : 0)\n        }\n      }\n\n      props.onDeleteChat && props.onDeleteChat(chat)\n    } else if (eventJSON.action === 'add_person') {\n      handleEditChat(eventJSON.data)\n\n      props.onAddPerson && props.onAddPerson(eventJSON.data)\n    } else if (eventJSON.action === 'remove_person') {\n      handleEditChat(eventJSON.data)\n\n      props.onRemovePerson && props.onRemovePerson(eventJSON.data)\n    } else if (eventJSON.action === 'new_message') {\n      const { id, message } = eventJSON.data\n\n      if (parseInt(id) === parseInt(activeChat)) {\n        const newMessages = { ...messages }\n        newMessages[message.created] = message\n        setMessages(newMessages)\n      }\n\n      if (message.sender_username !== props.userName && isBottomVisible) {\n        readMessage(conn, activeChat, message.id, (chat) =>\n          handleEditChat(chat)\n        )\n      }\n\n      props.onNewMessage && props.onNewMessage(id, message)\n    } else if (eventJSON.action === 'edit_message') {\n      const { id, message } = eventJSON.data\n\n      if (id === activeChat) {\n        messages[message.created] = message\n        setMessages(messages)\n      }\n\n      props.onEditMessage && props.onEditMessage(id, message)\n    } else if (eventJSON.action === 'delete_message') {\n      const { id, message } = eventJSON.data\n\n      if (id === activeChat) {\n        messages[message.created] = undefined\n        setMessages(messages)\n      }\n\n      props.onDeleteMessage && props.onDeleteMessage(id, message)\n    } else if (eventJSON.action === 'is_typing') {\n      const { id, person } = eventJSON.data\n      let newTypingCounter = { ...typingCounter }\n      newTypingCounter = {\n        ...newTypingCounter,\n        [id]: {\n          ...newTypingCounter[id],\n          [person]: Date.now()\n        }\n      }\n\n      setTypingCounter(newTypingCounter)\n\n      props.onTyping && props.onTyping(id, person)\n    }\n  }\n\n  const { development } = props\n  const wsStart = development ? 'ws://' : 'wss://'\n  const rootHost = development ? '127.0.0.1:8000' : 'api.chatengine.io'\n\n  if (!sessionToken || sessionToken === '') return <div />\n\n  return (\n    <WebSocket\n      url={`${wsStart}${rootHost}/person_v4/?session_token=${sessionToken}`}\n      reconnect={true}\n      reconnectIntervalInMilliSeconds={3000}\n      childRef={(ref) => (socketRef = ref)}\n      onOpen={onConnect.bind(this, props)}\n      onError={(e) => console.log('Socket Error', e)}\n      onMessage={handleEvent.bind(this)}\n      onClose={() => {\n        console.log('Socket Closed')\n        setConnecting(true)\n        props.reRender && props.reRender()\n      }}\n    />\n  )\n}\n\nexport default Socket\n","import React, { useState } from 'react'\n\nimport DataLoader from './DataLoader'\nimport SocketChild from './Socket4'\n\nconst Socket = (props) => {\n  const [hide, setHide] = useState(false)\n\n  function reRender() {\n    setHide(true)\n    setTimeout(() => setHide(false), 100)\n  }\n\n  return (\n    <div>\n      {!hide && <DataLoader {...props} />}\n      {!hide && <SocketChild {...props} reRender={() => reRender()} />}\n    </div>\n  )\n}\n\nexport default Socket\n","import React, { useContext, useState, useEffect } from 'react'\n\nimport {\n  ChatEngineContext,\n  getChat,\n  getLatestMessages\n} from 'react-chat-engine'\n\nimport { WebSocket } from 'nextjs-websocket'\n\nimport _ from 'lodash'\n\nlet socketRef = undefined\nlet pingIntervalID = 0\nlet timeIntervalID = 0\n\nconst pingInterval = 4000\nconst minLag = 15 * 1000\nconst reconnect = Date.now() + 10 * 1000\n\nconst SocketChild = (props) => {\n  const [now, setNow] = useState(Date.now())\n  const [shouldPongBy, setShouldPongBy] = useState(Date.now() + minLag)\n\n  const {\n    connecting,\n    setConnecting,\n    conn,\n    setConn,\n    setCreds,\n    chats,\n    setChats,\n    messages,\n    setMessages,\n    activeChat,\n    setActiveChat,\n    typingCounter,\n    setTypingCounter\n  } = useContext(ChatEngineContext)\n\n  useEffect(() => {\n    if (now > shouldPongBy) {\n      console.log('shouldPongBy', shouldPongBy)\n      console.log('now', now)\n      setConnecting(true)\n      props.reRender && props.reRender()\n      setShouldPongBy(Date.now() + minLag)\n    }\n  }, [now, shouldPongBy])\n  useEffect(() => {\n    return () => {\n      clearInterval(pingIntervalID)\n      clearInterval(timeIntervalID)\n    }\n  }, [])\n\n  // Common Context Handlers\n\n  function onEditChat(chat) {\n    if (chats) {\n      const newChats = { ...chats }\n      newChats[chat.id] = chat\n      setChats(newChats)\n    }\n\n    props.onEditChat && props.onEditChat(chat)\n  }\n\n  function onGetChat(chat) {\n    if (activeChat === null) {\n      setActiveChat(chat.id)\n    }\n\n    setChats(_.mapKeys([chat], 'id'))\n  }\n\n  function onConnect(conn) {\n    setConn(conn)\n    setCreds(conn)\n    setConnecting(false)\n\n    if (connecting) {\n      pingIntervalID = setInterval(() => {\n        try {\n          socketRef.sendMessage(JSON.stringify('ping'))\n        } catch (e) {\n          console.log('Socker error', e)\n        }\n      }, pingInterval)\n\n      timeIntervalID = setInterval(() => setNow(Date.now()), 1000)\n    }\n\n    getChat(conn, props.chatID, (chat) => onGetChat(chat))\n\n    if (Date.now() > reconnect) {\n      getLatestMessages(conn, props.chatID, 45, (id, list) => {\n        setMessages({ ...messages, ..._.mapKeys(list, 'created') })\n      })\n    }\n\n    props.onConnect && props.onConnect(conn)\n  }\n\n  // Socket Events\n\n  function handleEvent(event) {\n    const eventJSON = JSON.parse(event)\n\n    if (eventJSON.action === 'pong') {\n      setShouldPongBy(Date.now() + minLag)\n    } else if (eventJSON.action === 'login_error') {\n      console.log(\n        `Your chat auth credentials were not correct: \\n\n                Project ID: ${props.projectID} \\n\n                Chat ID: ${props.chatID} \\n\n                Access Key: ${props.chatAccessKey}\\n\n                Double check these credentials to make sure they're correct.\\n\n                If all three are correct, try resetting the username and secret in the Online Dashboard or Private API.`\n      )\n\n      setConn(undefined)\n      setCreds(undefined)\n\n      props.onFailAuth && props.onFailAuth(conn)\n    } else if (eventJSON.action === 'edit_chat') {\n      onEditChat(eventJSON.data)\n    } else if (eventJSON.action === 'delete_chat') {\n      const chat = eventJSON.data\n\n      if (chats) {\n        chats[chat.id] = undefined\n\n        setChats(chats)\n      }\n\n      props.onDeleteChat && props.onDeleteChat(chat)\n    } else if (eventJSON.action === 'add_person') {\n      onEditChat(eventJSON.data)\n\n      props.onAddPerson && props.onAddPerson(eventJSON.data)\n    } else if (eventJSON.action === 'remove_person') {\n      onEditChat(eventJSON.data)\n\n      props.onRemovePerson && props.onRemovePerson(eventJSON.data)\n    } else if (eventJSON.action === 'new_message') {\n      const { id, message } = eventJSON.data\n\n      if (id === activeChat) {\n        const newMessages = { ...messages }\n        newMessages[message.created] = message\n        setMessages(newMessages)\n      }\n\n      props.onNewMessage && props.onNewMessage(id, message)\n    } else if (eventJSON.action === 'edit_message') {\n      const { id, message } = eventJSON.data\n\n      if (id === activeChat) {\n        messages[message.created] = message\n        setMessages(messages)\n      }\n\n      props.onEditMessage && props.onEditMessage(id, message)\n    } else if (eventJSON.action === 'delete_message') {\n      const { id, message } = eventJSON.data\n\n      if (id === activeChat) {\n        messages[message.created] = undefined\n        setMessages(messages)\n      }\n\n      props.onDeleteMessage && props.onDeleteMessage(id, message)\n    } else if (eventJSON.action === 'is_typing') {\n      const { id, person } = eventJSON.data\n      let newTypingCounter = { ...typingCounter }\n      newTypingCounter = {\n        ...newTypingCounter,\n        [id]: {\n          ...newTypingCounter[id],\n          [person]: Date.now()\n        }\n      }\n\n      setTypingCounter(newTypingCounter)\n\n      props.onTyping && props.onTyping(id, person)\n    }\n  }\n\n  function onClose() {\n    setConnecting(true)\n    props.reRender && props.reRender()\n  }\n\n  const { development, publicKey, projectID, chatID, chatAccessKey } = props\n  const wsStart = development ? 'ws://' : 'wss://'\n  const rootHost = development ? '127.0.0.1:8000' : 'api.chatengine.io'\n  const project = publicKey ? publicKey : projectID\n\n  return (\n    <WebSocket\n      reconnect={true}\n      childRef={(ref) => (socketRef = ref)}\n      url={`${wsStart}${rootHost}/chat/?projectID=${project}&chatID=${chatID}&accessKey=${chatAccessKey}`}\n      onOpen={onConnect.bind(this, props)}\n      onClose={onClose.bind(this)}\n      onError={(e) => console.log('Socket Error', e)}\n      onMessage={handleEvent.bind(this)}\n      reconnectIntervalInMilliSeconds={3000}\n    />\n  )\n}\n\nexport default SocketChild\n","import React, { useState, useRef, useEffect } from 'react'\n\nimport { LoadingOutlined } from '@ant-design/icons'\n\nconst ChatLoader = props => {\n    function useOnScreen(ref) {\n        const [isIntersecting, setIntersecting] = useState(false)\n      \n        const observer = new IntersectionObserver(\n            ([entry]) => {\n                setIntersecting(entry.isIntersecting)\n                if (entry.isIntersecting) {\n                    props.onVisible()\n                }\n            }\n        )\n      \n        useEffect(() => {\n          observer.observe(ref.current)\n          // Remove the observer as soon as the component is unmounted\n          return () => { observer.disconnect() }\n        }, [])\n      \n        return isIntersecting\n    }\n  \n    const ref = useRef()\n    const isVisible = useOnScreen(ref)\n    \n    return (\n        <div ref={ref}>\n            <div style={{ textAlign: 'center', backgroundColor: '#e2e2e2', margin: '4px', borderRadius: '4px' }}>\n                <LoadingOutlined style={{ fontSize: '21px', padding: '24px' }} />\n            </div>\n        </div>\n    )\n}\n\nexport default ChatLoader","import React, { useState, useContext } from 'react'\n\nimport { CloseOutlined } from '@ant-design/icons'\n\nimport { ChatEngineContext } from '../../../Context'\n\nimport { newChat, Button, TextInput } from 'react-chat-engine'\n\nconst NewChatForm = (props) => {\n  const { conn, userCallbacks: { translate } } = useContext(ChatEngineContext)\n  const [value, setValue] = useState('')\n  const [selected, setSelected] = useState(false)\n  \n  function handleChange(event) {\n    setValue(event.target.value)\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault()\n\n    if (conn && value.trim().length > 0) {\n      newChat(\n        conn,\n        { title: value },\n        () => setSelected(false)\n      )\n    }\n\n    setValue('')\n  }\n\n  return (\n    <div>\n      {\n        props.onClose && \n        <div style={{ height: '0px' }}>\n          <CloseOutlined\n            style={styles.closeIcon}\n            onClick={() => props.onClose()}\n          />\n        </div>\n      }\n\n      <div\n        className='ce-chat-form-container' \n        style={{\n          ...styles.newChatContainer,\n          ...{ marginLeft: props.onClose ? '40px' : '0px' }\n        }}\n      >\n        {\n          selected ?\n          <form onSubmit={handleSubmit.bind(this)}> \n              <TextInput \n                autoFocus\n                label={translate('Chat Title', 'NewChatForm')}\n                value={value}\n                id='ce-new-chat-title-field'\n                onBlur={() => setSelected(false)}\n                style={{ width: '100%' }}\n                handleChange={(e) => handleChange(e)}\n              />\n          </form>:\n          <div>\n            <div style={{ height: '0px' }}>\n              <div style={{ fontWeight: '600', fontSize: '24px', position: 'relative', top: '4px', width: 'calc(100% - 48px)' }}>\n                {translate('My Chats', 'NewChatForm')}\n              </div>\n            </div>\n\n            <div style={{ width: '100%', textAlign: 'right' }}>\n              <Button \n                icon='plus'\n                id='new-chat-plus-button'\n                onClick={() => setSelected(true)}\n              />\n            </div>\n          </div>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default NewChatForm\n\nconst styles = {\n  closeIcon: {\n    position: 'relative',\n    top: '26px',\n    left: '18px',\n    fontSize: '16px',\n  },\n  newChatContainer: { \n    padding: '16px 14px',\n    backgroundColor: 'white'\n  }\n}","import React from 'react'\n\nconst ChatCard = () => {\n    return (\n        <div \n            style={styles.chatContainer}\n            className='ce-chat-card ce-chat-card-loading'\n        >\n            <div \n                style={{...styles.titleText, ...{ animation: `spin 2s linear infinite` }}}\n                className='ce-chat-title-text'\n                id={`ce-chat-card-title-loading`}\n            >\n                <div \n                    className='ce-chat-card-loading-bar'\n                    style={{ \n                        ...styles.loadingBar,\n                        ...{ marginBottom: '8px', height: '16px', width: '100%' }\n                    }} \n                />\n            </div>\n\n            <div style={{ width: '100%' }} className='ce-chat-subtitle'>\n                <div style={styles.messageText} className='ce-chat-subtitle-text ce-chat-subtitle-message'>\n                    <div \n                        className='ce-chat-card-loading-bar'\n                        style={{ \n                            ...styles.loadingBar,\n                            ...{ width: '45%' }\n                        }} \n                    />\n                </div>\n\n                <div \n                    className='ce-chat-card-loading-bar'\n                    style={{ \n                        ...styles.loadingBar,\n                        ...{ float: 'right', marginTop: '6px', width: '20%' }\n                    }} \n                />\n            </div>\n        </div>\n    )\n}\n\nconst styles={\n    chatContainer: { \n        padding: '16px', \n        paddingBottom: '12px',\n        cursor: 'pointer'\n    },\n    titleText: { \n        fontWeight: '500',\n        paddingBottom: '4px', \n        whiteSpace: 'nowrap', \n        overflow: 'hidden' \n    },\n    messageText: {\n        width: '75%',\n        color: 'rgba(153, 153, 153, 1)', \n        fontSize: '14px', \n        whiteSpace: 'nowrap', \n        overflow: 'hidden',\n        display: 'inline-block'\n    },\n    loadingBar: {\n        borderRadius: '4px',\n        backgroundColor: '#e2e2e2', \n        height: '12px', \n        display: 'inline-block'\n    }\n}\n\nexport default ChatCard;\n","import React from 'react';\nimport { animated } from 'react-spring';\nimport useBoop from './useBoop';\n\nconst Boop = ({ children, triggers=[], ...boopConfig }) => {\n  const [style, trigger] = useBoop(boopConfig);\n\n  function isTriggerPresent(trigger) {\n    return triggers.indexOf(trigger) !== -1\n  }\n\n  return (\n    <animated.span \n      style={style}\n      onClick={() => isTriggerPresent('onClick') && trigger()}\n      onMouseEnter={() => isTriggerPresent('onMouseEnter') && trigger()} \n      onMouseLeave={() => isTriggerPresent('onMouseLeave') && trigger()} \n    >\n      {children}\n    </animated.span>\n  );\n};\n\nexport default Boop","import React from 'react';\nimport { useSpring } from 'react-spring';\n\nexport default function useBoop({\n    x = 0,\n    y = 0,\n    rotation = 0,\n    scale = 1,\n    timing = 150,\n    springConfig = {\n        tension: 300,\n        friction: 10,\n    },\n    width = 'auto'\n}) {\n    const [isBooped, setIsBooped] = React.useState(false);\n    const style = useSpring({\n        display: 'inline-block',\n        backfaceVisibility: 'hidden',\n        transform: isBooped\n        ? `translate(${x}px, ${y}px)\n            rotate(${rotation}deg)\n            scale(${scale})`\n        : `translate(0px, 0px)\n            rotate(0deg)\n            scale(1)`,\n        config: springConfig,\n        width: width,\n    });\n    React.useEffect(() => {\n        if (!isBooped) { return; }\n        const timeoutId = window.setTimeout(() => {\n            setIsBooped(false);\n        }, timing);\n        return () => { window.clearTimeout(timeoutId); };\n    }, [isBooped]);\n    const trigger = React.useCallback(() => {\n        setIsBooped(true);\n    }, []);\n    return [style, trigger];\n}","import React, { useContext } from 'react'\n\nimport { ChatEngineContext } from 'react-chat-engine'\n\nimport _ from 'lodash'\n\nimport Loading from './Loading'\n\nimport { Boop } from '../../components/Effects'\n\nimport { getDateTime } from '../../Utilities/timezone'\n\nconst { htmlToText } = require('html-to-text')\n\nconst ChatCard = props => {\n    const { chat } = props\n    const { conn, activeChat, setActiveChat, userCallbacks: { formatDateTime, translate } } = useContext(ChatEngineContext)\n\n    if (_.isEmpty(chat) || props.loading) return <Loading />\n    const spinnerDiv = !props.spinner ? false : (\n        <div\n            style={{\n                display: 'inline-block',\n                border: '10px solid #f3f3f3',\n                borderTop: '10px solid #3498db',\n                borderRadius: '50%',\n                width: '1.5em',\n                height: '1.5em',\n                marginRight: '0.3em',\n                animation: 'rotate360 1s linear infinite',\n            }}\n        />\n    );\n    if (!conn || conn === null) return <div/>\n\n    const extraStyle = activeChat === chat.id ? styles.activeChat : {}\n    const otherPerson = chat.people.find(person => conn.userName !== person.person.username);\n    const title = chat.is_direct_chat && otherPerson ? otherPerson.person.username : chat.title\n    \n    let lastMessage = htmlToText(chat.last_message.text, {})\n    if (!lastMessage) {\n        lastMessage = chat.last_message.attachments.length > 0 ?\n        `${chat.last_message.attachments.length} image${chat.last_message.attachments.length > 1 ? 's' : ''}` :\n        translate('Say hello!', 'ChatCard')\n    }\n\n    function didReadLastMessage(chat) {\n        let didReadLastMessage = true\n        chat.people.map(chat_person => {\n            if(conn.userName === chat_person.person.username) {\n                didReadLastMessage = chat.last_message.id === chat_person.last_read\n            }\n        })\n        return didReadLastMessage\n    }\n\n    function daySinceSent(date) {\n        if (!date) return '';\n        return (formatDateTime(getDateTime(date), 'ago'));\n    }\n\n    return (\n        <Boop triggers={['onClick', 'onMouseEnter']} x={3} timing={60} width=\"100%\">\n            <div \n                onClick={() => !props.spinner && setActiveChat(chat.id)}\n                style={{ ...styles.chatContainer, ...extraStyle }}\n                className={`ce-chat-card ${activeChat === chat.id && 'ce-active-chat-card'}`}\n            >\n                <div \n                    style={ styles.titleText }\n                    className='ce-chat-title-text'\n                    id={`ce-chat-card-title-${title}`}\n                >\n                    <div \n                        style={{ \n                            width: !didReadLastMessage(chat) && 'calc(100% - 18px)', \n                            overflowX: 'hidden', \n                            display: 'inline-block' \n                        }}\n                    >\n                        {spinnerDiv}\n                        { title }\n                    </div>\n                    \n                    {\n                        !didReadLastMessage(chat) &&\n                        <div \n                            className='ce-chat-unread-dot'\n                            style={{ \n                                marginTop: '5px',\n                                width: '12px',\n                                height: '12px',\n                                borderRadius: '6px',\n                                backgroundColor: '#1890ff',\n                                float: 'right', \n                                display: 'inline-block'\n                            }} \n                        />\n                    }\n                </div>\n\n                <div style={{ width: '100%' }} className='ce-chat-subtitle'>\n                    <div style={styles.messageText} className='ce-chat-subtitle-text ce-chat-subtitle-message'>\n                        { lastMessage }\n                    </div>\n\n                    <div \n                        className='ce-chat-subtitle-text ce-chat-subtitle-date'\n                        style={{ ...styles.messageText, ...{ textAlign: 'right', width: '25%' } }}\n                    >\n                        { daySinceSent(chat.last_message.created) }\n                    </div>\n                </div>\n            </div>\n        </Boop>\n    )\n}\n\nconst styles={\n    chatContainer: { \n        padding: '16px', \n        paddingBottom: '12px',\n        cursor: 'pointer'\n    },\n    titleText: { \n        fontWeight: '500',\n        paddingBottom: '4px', \n        whiteSpace: 'nowrap', \n        overflow: 'hidden' \n    },\n    messageText: {\n        width: '75%',\n        color: 'rgba(153, 153, 153, 1)', \n        fontSize: '14px', \n        whiteSpace: 'nowrap', \n        overflow: 'hidden',\n        display: 'inline-block'\n    },\n    activeChat: {\n        backgroundColor: '#d9d9d9',\n        border: '0px solid white',\n        borderRadius: '12px'\n    },\n}\n\nexport default ChatCard;\n","import React, { useContext, useEffect, useMemo, useRef, useState } from 'react'\n\nimport { ChatEngineContext, getLatestChats, getChatsBefore } from 'react-chat-engine'\n\nimport { getDateTime } from '../Utilities/timezone'\n\nimport _ from 'lodash'\n\nimport ChatLoader from './ChatLoader'\nimport NewChatForm from './NewChatForm'\nimport ChatCard from './ChatCard'\n\nconst interval = 33\n\nconst ChatList = props => {\n    const didMountRef = useRef(false)\n    const [latestChatLoading, setLatestChatLoading] = useState(false);\n    const [loadChats, setLoadChats] = useState(false) // true, false, or loading\n    const [hasMoreChats, setHasMoreChats] = useState(true)\n    const { conn, chats, setChats, setActiveChat } = useContext(ChatEngineContext)\n\n    const chatList = sortChats(\n        chats ? \n        Object.values(chats) : \n        [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}]\n    )\n\n    const anyLoading = useMemo(() => (\n        !!(loadChats || latestChatLoading)\n    ), [loadChats, latestChatLoading]);\n\n    useEffect(() => {\n        if (!didMountRef.current) {\n            didMountRef.current = true\n\n            setLatestChatLoading(true);\n            getLatestChats(\n                props, \n                interval, \n                (chats) => {\n                    onGetChats(chats)\n                    chats.length > 0 && setActiveChat(chats[0].id)\n                    setLatestChatLoading(false);\n                }\n            )\n        }\n    })\n\n    useEffect(() => {\n        if (!loadChats || loadChats === 'loading') return;\n        setLoadChats('loading')\n\n        const chatList = (chats !== null ? sortChats(Object.values(chats)) : []).filter(a => a)\n        if (chatList.length > 0) {\n            const before = chatList[chatList.length - 1].created\n            getChatsBefore(props, before, interval, (chats) => onGetChats(chats))\n        }\n    }, [loadChats])\n\n    function sortChats(chats) {\n        return chats.sort((a, b) => { \n            const aDate = a.last_message && a.last_message.created ? getDateTime(a.last_message.created) : getDateTime(a.created)\n            const bDate = b.last_message && b.last_message.created ? getDateTime(b.last_message.created) : getDateTime(b.created)\n            return new Date(bDate) - new Date(aDate); \n        })\n    }\n\n    function onGetChats(chatList) {\n        setLoadChats(false)\n        const oldChats = chats !== null ? chats : {}\n        const newChats = _.mapKeys({...chatList}, 'id')\n        const allChats = {...oldChats, ...newChats}\n        setChats(allChats);\n        interval > chatList.length && setHasMoreChats(false);\n    }\n\n    function renderChats(chats) {\n        return chats.map((chat, index) => {\n            if (!chat) {\n                return <div key={`chat_${index}`} />\n\n            } else if (props.renderChatCard) {\n                return <div key={`chat_${index}`}>{props.renderChatCard(chat, index)}</div>\n                \n            } else {\n                return (\n                    <div \n                        key={`chat_${index}`}\n                        onClick={() => !anyLoading && props.onChatClick && props.onChatClick(chat.id)}\n                    >\n                        <ChatCard chat={chat} spinner={anyLoading} />\n                    </div>\n                )\n            }\n        })\n    }\n\n    return (\n        <div style={styles.chatListContainer} className='ce-chat-list'>\n            <div style={styles.chatsContainer} className='ce-chats-container'>\n                { \n                    props.renderNewChatForm ? \n                    props.renderNewChatForm(conn) : \n                    <NewChatForm onClose={props.onClose ? () => props.onClose() : undefined} /> \n                }\n\n                { renderChats(chatList) } \n\n                { \n                    hasMoreChats && chatList.length > 0 &&\n                    <div>\n                        <ChatLoader \n                            onVisible={() => !loadChats && setLoadChats(true)} />\n                        <div style={{  height: '8px' }} />\n                    </div>\n                }\n            </div>\n        </div>\n    )\n}\n\nconst styles={\n    chatListContainer: { \n        height: '100%', \n        maxHeight: '100vh', \n        overflow: 'scroll', \n        overflowX: 'hidden',\n        borderRight: '1px solid #afafaf', \n        backgroundColor: 'white'\n    },\n    chatsContainer: { \n        width: '100%', \n        height: '100%',\n        backgroundColor: 'white', \n        borderRadius: '0px 0px 24px 24px'\n    },\n}\n\nexport default ChatList;\n","import React, { useContext } from 'react'\n\nimport { ChatEngineContext } from 'react-chat-engine'\n\nconst AuthFail = (props) => {\n    const { userCallbacks: { translate } } = useContext(ChatEngineContext)\n    const project = props.projectID ? props.projectID : props.publicKey\n    return (\n        <div\n            id='ce-login-fail-breaker'\n            style={{ width: '100%', textAlign: 'center', paddingTop: 'calc(50% - 112px)' }}\n        >\n            <div\n                id='ce-login-fail-text'\n                style={{ color: '#afafaf', fontWeight: '600', fontSize: '14px', marginBottom: '6px', marginRight: '32px', marginLeft: '32px' }}\n            >\n                {translate(\n                    'Your credentials are incorrect. Make sure your Project ID, Username, and Password are correct here',\n                    'AuthFail'\n                )}\n            </div>\n\n            <img\n                id='ce-login-fail-gif'\n                style={{ width: '50%', maxWidth: '200px' }}\n                src='https://chat-engine-assets.s3.amazonaws.com/welcome_gifs/no.gif'\n                alt='chat-engine-login-fail'\n            />\n        </div>\n    )\n}\n\nexport default AuthFail","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function newChat(props, data, callback) {\n    axios.post(\n        `${str.getApiUrl(props)}/chats/`,\n        data, \n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('New Chat Error', error)\n    });\n}","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\n\nexport default class TextInput extends Component {\n    state = {\n        focused: false,\n        value: null\n    }\n\n    componentDidMount() {\n        const value = this.props.default\n        if(value) {\n            const event = {target: {value}}\n            this.props.handleChange(event)\n            this.setState({ value })\n        }\n    }\n\n    render() {\n        const customStyle = this.props.style ? this.props.style : {}\n        const defaultStyle = this.state.focused ? styles.focusInput : styles.input\n\n        return (\n            // NOTE: You may need to make a div the searchContainer to put icons in...\n            <input \n                id={this.props.id}\n                autoFocus={this.props.autoFocus}\n                className='ce-input ce-text-input'\n                value={this.props.value} \n                placeholder={this.props.label}\n                style={{ ...defaultStyle, ...customStyle }}\n                onBlur={() => {\n                    this.setState({ focused: false });\n                    this.props.onBlur && this.props.onBlur();\n                }}\n                onFocus={() => {\n                    this.setState({ focused: true });\n                    this.props.onFocus && this.props.onFocus();\n                }}\n                type={this.props.type ? this.props.type : \"text\" }\n                onChange={(e) => this.props.handleChange && this.props.handleChange(e)} \n            />\n        )\n    }\n}\n\nconst styles = {\n    input: {\n        // Sizes\n        height: '36px',\n        fontSize: '15px',\n        // Border\n        outline: 'none',\n        borderRadius: '24px',\n        border: '1px solid #d9d9d9',\n        // Padding and fixed width\n        padding: '0px 12px',\n        boxSizing: 'border-box',\n    },\n    focusInput: {\n        // Sizes\n        height: '36px',\n        fontSize: '15px',\n        // Border\n        outline: 'none',\n        borderRadius: '24px',\n        border: '1px solid #1890ff',\n        // Padding and fixed width\n        padding: '0px 12px',\n        boxSizing: 'border-box',\n    }\n}\n\nTextInput.propTypes = {\n    default: PropTypes.string,\n    value: PropTypes.string,\n    label: PropTypes.string,\n    type: PropTypes.oneOf(['text', 'password', 'number']),\n    autoFocus: PropTypes.bool,\n    id: PropTypes.string,\n    style: PropTypes.object,\n    handleChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onBlur: PropTypes.func,\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { CloseOutlined } from '@ant-design/icons'\n\nexport default class AutoCompleteInput extends Component {\n    state = {\n        focused: false,\n        showAll: false,\n    }\n\n    onFocus() {\n        this.onChange('', true)\n        this.setState({ focused: true })\n        this.props.onFocus && this.props.onFocus()\n    }\n\n    onBlur() {\n        this.setState({ focused: false })\n        this.props.onBlur && this.props.onBlur()\n    }\n\n    onChange(value, showAll) {\n        this.setState({ showAll })\n        this.props.handleChange && this.props.handleChange(value)\n    }\n\n    getNames() {\n        let count = 0\n        const max = this.props.max ? this.props.max : 3\n        \n        const results = []\n\n        this.props.options.map(option => {\n            if (JSON.stringify(option).toLowerCase().indexOf(this.props.value.toLowerCase()) !== -1 && (count < max || max < 0)) {\n                count = count + 1\n                results.push(option)\n            }\n        })\n        \n        return results\n    }\n\n\n    renderOptions() {\n        if(!this.props.value && !this.state.showAll) { return <div /> }\n\n        const results = this.getNames()\n\n        return results.map((option, index) => {\n            return (\n                <div key={`option_${index}`} className='ce-autocomplete-option'>\n                    { this.props.renderOption && this.props.renderOption(option) }\n\n                    { \n                        index === results.length - 1 && \n                        <div \n                            style={styles.close} \n                            className='ce-autocomplete-close'\n                            onClick={() => this.onChange('', false)}\n                        >\n                            <CloseOutlined />\n                        </div>\n                    }\n                </div>\n            )\n        })\n    }\n\n    render() {\n        const { options } = this.props\n        const customStyle = this.props.style ? this.props.style : {}\n        const defaultStyle = { ...styles.input, ...{ border: this.state.focused ? '1px solid #1890ff' : '1px solid #d9d9d9' } }\n\n        return (\n            <div>\n                <input \n                    id='ce-add-username-input'\n                    className='ce-input ce-autocomplete-input'\n                    value={this.props.value} \n                    placeholder={this.props.label}\n                    style={{ ...defaultStyle, ...customStyle }}\n                    type={this.props.type ? this.props.type : \"text\" }\n                    onBlur={() => this.onBlur()}\n                    onFocus={() => this.onFocus()}\n                    onChange={(e) => this.onChange(e.target.value, true)}\n                />\n\n                {\n                    options && options.length > 0 && this.state.showAll &&\n                    <div \n                        className='ce-autocomplete-options'\n                        style={{ borderRadius: '19px', border: '1px solid #afafaf', overflow: 'hidden' }}\n                    >\n                        { this.props.options && this.renderOptions() }\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nconst styles = {\n    input: {\n        height: '36px',\n        fontSize: '15px',\n        outline: 'none',\n        borderRadius: '24px',\n        padding: '0px 12px',\n        boxSizing: 'border-box'\n    },\n    close: {\n        cursor: 'pointer',\n        textAlign: 'center',\n        padding: '8px 12px',\n        fontSize: '15px',\n        borderRadius: '24px',\n    }\n}\n\nAutoCompleteInput.propTypes = {\n    default: PropTypes.string,\n    value: PropTypes.string,\n    options: PropTypes.arrayOf(PropTypes.object),\n    max: PropTypes.number,\n    label: PropTypes.string,\n    type: PropTypes.oneOf(['text', 'number']),\n    style: PropTypes.object,\n    handleChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onBlur: PropTypes.func,\n}","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { PlusOutlined, DeleteOutlined, UserAddOutlined } from '@ant-design/icons'\n\nexport default class Button extends Component {\n    state = {\n        hovered: false\n    }\n\n    render() {\n        const { value, icon, theme, style, id, type, onClick } = this.props\n\n        const customStyle = style ? style : {}\n        const hoverStyle = this.state.hovered ? styles.hoverButton : {}\n        const themeStyle = theme === 'danger' ? styles.dangerButton : styles.button\n\n        return (\n            <button \n                id={id}\n                type={type}\n                onClick={() => onClick && onClick()}\n                onMouseEnter={() => this.setState({ hovered: true })}\n                onMouseLeave={() => this.setState({ hovered: false })}\n                style={{ ...themeStyle, ...customStyle, ...hoverStyle }}\n                className={`ce-primary-button ${theme === 'danger' ? 'ce-danger-button' : ''}`}\n            >\n                { icon === 'plus' && <PlusOutlined /> }\n                { icon === 'delete'  && <DeleteOutlined /> }\n                { icon === 'user-add'  && <UserAddOutlined /> }\n\n                { value && icon ? ` ${value}` : value}  \n            </button>\n        )\n    }\n}\n\nconst styles = {\n    button: {\n        color: 'white',\n        border: 'none',\n        outline: 'none',\n        height: '36px',\n        fontSize: '15px',\n        cursor: 'pointer',\n        padding: '8px 16px',\n        borderRadius: '33px',\n        backgroundColor: '#1890ff'\n    },\n    dangerButton: {\n        color: 'red',\n        border: 'none',\n        outline: 'none',\n        height: '36px',\n        fontSize: '15px',\n        cursor: 'pointer',\n        padding: '8px 16px',\n        borderRadius: '33px',\n        backgroundColor: 'white',\n        border: '1px solid red',\n    },\n    hoverButton: {\n        opacity: '0.66',\n    }\n}\n\nButton.propTypes = {\n    value: PropTypes.string,\n    onClick: PropTypes.func,\n    style: PropTypes.object,\n    id: PropTypes.string,\n    icon: PropTypes.oneOf([undefined, 'plus', 'delete', 'user-add']),\n    theme: PropTypes.oneOf([undefined, 'danger']),\n    type: PropTypes.oneOf([undefined, 'submit']), \n}","import React, { useState, useContext } from 'react'\nimport { newChat } from '../../../../../actions/chats'\nimport { TextInput } from '../../../../../components/ChatEngine/components/Input'\nimport Button from '../../../../../components/ChatEngine/components/Button'\n\nimport { ChatEngineContext } from 'react-chat-engine'\n\nconst CreateChat = (props) => {\n    const { userCallbacks: { translate } } = useContext(ChatEngineContext);\n    const { conn } = props;\n    const [title, setTitle] = useState('');\n\n    function onSubmit(event) {\n        event.preventDefault();\n        if (title) {\n            newChat(\n                conn,\n                { title },\n            );\n        }\n    }\n\n    function onChange(event) {\n        setTitle(event.target.value);\n    }\n\n    return (\n        <div class='ce-ice-breaker-no-chat'>\n            <form onSubmit={onSubmit}>\n                <b>{translate('No chat room found, start by creating one', 'CreateChat')}</b>\n                <br />\n                <TextInput\n                    type=\"text\"\n                    label={translate('Chat room name', 'CreateChat')}\n                    handleChange={onChange}\n                />\n                <Button type=\"submit\" value={translate('Create', 'CreateChat')} />\n            </form>\n        </div>\n    )\n}\n\nexport default CreateChat\n","import React, { useContext } from 'react'\n\nimport { ChatEngineContext } from 'react-chat-engine'\n\nconst IceBreaker = () => {\n    const { userCallbacks: { translate } } = useContext(ChatEngineContext)\n    return (\n        <div\n            id='ce-ice-breaker-chat'\n            style={{ width: '100%', textAlign: 'center', paddingTop: 'calc(43% - 112px)' }}\n        >\n            <div \n                id='ce-ice-breaker-text' \n                style={{ color: '#afafaf', fontWeight: '600', fontSize: '14px', marginBottom: '6px' }}\n            >\n                {translate('No messages here yet...', 'IceBreaker')}\n            </div>\n        </div>   \n    )\n}\n\nexport default IceBreaker\n","import React, { useState, useRef, useEffect, useContext } from 'react'\n\nimport { ChatEngineContext } from '../../../Context'\n\nconst RenderTrigger = props => {\n    const { setLoadMoreMessages } = useContext(ChatEngineContext)\n\n    function useOnScreen(ref) {\n        const [isIntersecting, setIntersecting] = useState(false)\n      \n        const observer = new IntersectionObserver(\n            ([entry]) => {\n                setIntersecting(entry.isIntersecting)\n                \n                if (entry.isIntersecting) { \n                    props.onEnter && props.onEnter()\n                } else {\n                    props.onLeave && props.onLeave()\n                }\n            }\n        )\n      \n        useEffect(() => {\n          observer.observe(ref.current)\n          // Remove the observer as soon as the component is unmounted\n          return () => { observer.disconnect() }\n        }, [])\n      \n        return isIntersecting\n    }\n  \n    const ref = useRef()\n    const isVisible = useOnScreen(ref)\n    \n    return <div ref={ref} id={props.id}>{props.children}</div>\n}\n\nexport default RenderTrigger","import React, { useState, useContext } from 'react'\n\nimport { MenuOutlined } from '@ant-design/icons'\n\nimport { ChatEngineContext } from '../../../Context'\n\nimport ChatList from '../../ChatList'\n\nconst ChatListDrawer = props => {\n    const context = useContext(ChatEngineContext)\n    const { setIsOpen } = props;\n\n    return (\n        <div> \n            <MenuOutlined\n                onClick={() => setIsOpen(true)}\n                style={{\n                    color: 'rgb(24, 144, 255)',\n                    outline: 'none',\n                    fontSize: '1.5em',\n                }} \n            />\n        </div>\n    )\n}\n\nexport default ChatListDrawer\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { removePerson } from 'react-chat-engine'\n\nimport { Avatar, Button } from 'react-chat-engine'\n\nconst PersonRow = props => {\n    const [selected, setSelected] = useState(false)\n\n    const { person, chat, conn } = props\n\n    if (!person || !chat) { return <div /> }\n\n    if (!conn || conn === null) return <div />\n\n    function onRemovePerson() {\n        removePerson(\n            props.conn,\n            props.chat.id,\n            props.person.username\n        )\n    }\n\n    function renderPersonText(person) {\n        if (person.first_name && person.first_name !== null) {\n            return `${person.first_name}${person.last_name ? ` ${person.last_name}` : ''}`\n        } else {\n            return person.username\n        }\n    }\n\n    return (\n        <div \n            className='ce-person-container'\n            onMouseEnter={() => setSelected(true)}\n            onMouseLeave={() => setSelected(false)}\n        >\n            <div \n                className='ce-person-avatar'\n                style={{ padding: '2px', height: '0px' }}\n            >\n                <Avatar \n                    avatar={person.avatar} \n                    username={person.username} \n                    is_online={person.is_online}\n                />\n            </div>\n\n            <div\n                className='ce-person-text'\n                style={{ paddingLeft: '52px', height: '44px', position: 'relative', top: '10px', fontSize: '15px' }}\n            >\n                { renderPersonText(person) }\n            </div>\n\n            {\n                selected && (conn.userName === chat.admin.username) && (person.username !== chat.admin.username) &&\n                <div\n                    className='ce-delete-chat' \n                    style={{ float: 'right', height: '0px', position: 'relative', bottom: '44px'}}\n                >\n                    <Button \n                        theme='danger'\n                        icon='delete'\n                        onClick={() => onRemovePerson()}\n                    />\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default PersonRow\n\nPersonRow.propTypes = {\n    person: PropTypes.object.isRequired,\n    chat: PropTypes.object.isRequired,\n    conn: PropTypes.object,\n}","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Avatar } from 'react-chat-engine'\n\n\nconst PersonOption = props => {\n    const [focused, setFocused] = useState(false)\n\n    const { avatar, username } = props.person \n\n    return (\n        <div \n            id={`ce-username-option-${username}`}\n            onMouseEnter={() => setFocused(true)}\n            onMouseLeave={() => setFocused(false)}\n            onClick={() => props.onClick && props.onClick()}\n            style={{ ...styles.option, ...{ backgroundColor: focused ? '#f5f5f5' : 'white'} }}\n        >\n            <div>\n                <Avatar username={username} avatar={avatar} />\n            </div>\n\n            <div style={{ display: 'flex', padding: '12px 4px' }}>\n                {props.person.username}\n            </div>\n        </div>\n    );\n}\n\nexport default PersonOption\n\nconst styles = {\n  option: {\n    padding: '4px 16px',\n    cursor: 'pointer',\n    fontSize: '15px',\n    display: 'flex'\n  },\n}\n\nPersonOption.propTypes = {\n    person: PropTypes.object.isRequired,\n}","import React, { useState, useContext } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { ChatEngineContext } from 'react-chat-engine'\n\nimport { addPerson, getOtherPeople } from 'react-chat-engine'\n\nimport { AutoCompleteInput } from 'react-chat-engine'\n\nimport PersonOption from './PersonOption'\n\nconst PersonForm = props => {\n  const { userCallbacks: { translate } } = useContext(ChatEngineContext) \n  const [state, setState] = useState({\n    value: '',\n    others: []\n  })\n\n  function handleChange(value) {\n    setState({ ...state, value });\n  }\n\n  function invitePerson(name) {\n    addPerson(\n      props.conn,\n      props.chat.id,\n      name,\n      () => { \n        setState({ ...state, value: '' }); \n        getOthers(); \n      }\n    )\n  }\n\n  function getOthers() {\n    getOtherPeople(\n      props.conn,\n      props.chat.id,\n      (id, others) => setState({ ...state, others }),\n      () => {},\n    )\n  }\n\n  function renderOption(option) {\n    return <PersonOption person={option} onClick={() => invitePerson(option.username)} />\n  }\n\n  return (\n    <div style={{ marginBottom: '12px' }}>\n      <AutoCompleteInput \n        style={{ width: '100%' }}\n        label={translate('Type a username', 'PersonForm')}\n        value={state.value}\n        options={state.others}\n        onFocus={() => getOthers()}\n        handleChange={(value) => handleChange(value)} \n        renderOption={(option) => renderOption(option)}\n        max={-1}\n      />\n    </div>\n  )\n}\n\nexport default PersonForm\n\nPersonForm.propTypes = {\n  chat: PropTypes.object.isRequired,\n  conn: PropTypes.object.isRequired,\n}","import React, { useState } from 'react'\n\nimport { LeftOutlined } from '@ant-design/icons'\n\nconst SettingsBlock = (props) => {\n    const [collapsed, setCollapsed] = useState(true)\n    const [hovered, setHovered] = useState(false)\n\n    return (\n        <div style={{ borderTop: '1px solid #f0f0f0' }}>\n            <div \n                id={props.id}\n                className={props.className}\n                onMouseEnter={() => setHovered(true)}\n                onMouseLeave={() => setHovered(false)}\n                onClick={() => setCollapsed(!collapsed)}\n                style={{\n                    cursor: 'pointer',\n                    backgroundColor: hovered ? '#f0f0f0' : '#fff',\n                    transition: `background-color 100ms`,\n                }}\n            >\n                <div style={{ fontSize: '17px', padding: '12px', fontWeight: '600' }}>\n                    { props.label }\n                </div>\n\n                {!props.alwaysOpen && (\n                    <LeftOutlined \n                        style={{\n                            float: 'right',\n                            position: 'relative',\n                            bottom: '30px',\n                            right: '12px',\n                            transform: collapsed ? `rotate(0deg)` : `rotate(-90deg)`,\n                            transition: `transform 100ms`,\n                        }} \n                    />\n                )}\n            </div>\n\n            <div>\n                {(!collapsed || props.alwaysOpen) && props.children}\n            </div>\n        </div>\n    )\n}\n\nexport default SettingsBlock\n","import React, { useContext } from 'react'\n\nimport { ChatEngineContext } from 'react-chat-engine'\n\nimport PersonRow from './PersonRow'\nimport PersonForm from './PersonForm'\n\nimport SettingsBlock from '../SettingsBlock'\n\nconst PeopleSettings = () => {\n    const { conn, chats, activeChat, userCallbacks: { translate } } = useContext(ChatEngineContext)  \n    const chat = chats && chats[activeChat] \n\n    if (!chat || chat.is_direct_chat) { return <div /> }\n\n    function renderChatPeople(people, chat) {\n        return people.map((chatPerson, index) => {\n            return (\n                <PersonRow \n                    key={`person_${index}`} \n                    person={chatPerson.person}\n                    conn={conn} \n                    chat={chat} \n                />\n            )\n        })\n    }    \n\n    return (\n        <div \n            style={{ borderTop: '1px solid #f0f0f0' }}\n        >\n            <SettingsBlock\n                label={translate('People', 'PeopleSettings')}\n                className='ce-section-title-container ce-person-title-container'\n            >\n                <div>\n                    <div style={{ height: '12px' }} />\n\n                    { renderChatPeople(chat.people, chat) }\n\n                    <div style={{ height: '12px' }} />\n\n                    {\n                        conn && chat && conn.userName === chat.admin.username &&\n                        <PersonForm conn={conn} chat={chat} />\n                    }\n                </div>\n            </SettingsBlock>\n        </div>\n    )\n}\n\nexport default PeopleSettings\n","const images = ['jpg', 'jpeg', 'png', 'gif', 'tiff']\n\nexport const isImage = (fileName) => {\n    const dotSplit = fileName.split('.')\n    return dotSplit.length > 0 && images.indexOf(dotSplit[dotSplit.length - 1].toLowerCase()) !== -1\n}\n\nexport const getFileName = (fileUrl) => {\n    const slashSplit = fileUrl.split('/')\n    const nameAndHash = slashSplit[slashSplit.length - 1]\n    return nameAndHash.split('?')[0]\n}","import React, { useContext } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { getFileName, isImage } from '../../ChatFeed/Messages/Bubble/file'\n\nimport { ChatEngineContext } from 'react-chat-engine'\n\nconst Thumbnail = props => {\n    const { userCallbacks: { openAttachment } } = useContext(ChatEngineContext);\n    const { attachment } = props \n\n    if (!attachment) { return <div /> }\n\n    const fileName = getFileName(attachment.file);\n\n    return (\n        <div\n            style={styles.container}\n            className='ce-photo-thumbnail'\n            onClick={() => openAttachment(attachment, 'image')}\n        >\n            <div style={{ paddingTop: '100%' }} />\n            \n            {(isImage(fileName) ? (\n                <img\n                    alt={attachment.id}\n                    style={styles.image}\n                    src={attachment.file}\n                    className='ce-photo-img'\n                    id={`image-${attachment.id}`}\n                />\n            ) : (\n                <div \n                    alt={attachment.id}\n                    style={styles.file}\n                    className='ce-settings-file'\n                    id={`image-${attachment.id}`}\n                >\n                    {fileName}\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default Thumbnail\n\nconst styles = {\n    container: { \n        position: 'relative',\n        width: 'calc(33% - 8px)',\n        border: '1px solid white',\n        display: 'inline-block',\n        cursor: 'pointer'\n    },\n    image: {\n        top: '0px',\n        width: '100%',\n        height: '100%',\n        position: 'absolute',\n        objectFit: 'cover'\n    },\n    file: {\n        top: '0px',\n        width: '100%',\n        height: '100%',\n        position: 'absolute',\n        overflow: 'auto',\n        padding: '10px 5px',\n    },\n}\n\nThumbnail.propTypes = {\n    attachment: PropTypes.object.isRequired,\n}","import React, { useContext } from 'react'\n\nimport { ChatEngineContext } from 'react-chat-engine'\n\nimport Thumbnail from './Thumbnail'\n\nimport SettingsBlock from '../SettingsBlock'\n\n\nconst PhotosSettings = () => {\n    const { chats, activeChat, userCallbacks: { translate } } = useContext(ChatEngineContext)  \n    const chat = chats && chats[activeChat] \n\n    if (!chat) return <div />\n\n    function renderPhotos(attachments) {\n        return attachments.map((attachment, index) => {\n            return <Thumbnail key={`person_${index}`} attachment={attachment} />\n        })\n    }\n\n    return (\n        <div style={{ borderTop: '1px solid #f0f0f0' }} className='ce-photo-section'>\n            <SettingsBlock\n                label={translate('Files', 'PhotosSettings')}\n                className='ce-section-title-container ce-photo-title-container'\n            >\n                <div className='ce-photo-feed'>\n                    <div style={{ height: '12px' }} />\n\n                    { renderPhotos(chat.attachments) }\n                </div>\n            </SettingsBlock>\n        </div>\n    )\n}\n\nexport default PhotosSettings\n","import React, { useContext } from 'react'\n\nimport { Button, deleteChat, ChatEngineContext } from 'react-chat-engine'\n\nimport SettingsBlock from '../SettingsBlock'\n\nconst OptionsSettings = () => {\n    const { conn, chats, activeChat, userCallbacks: { translate } } = useContext(ChatEngineContext)  \n    const chat = chats && chats[activeChat] \n\n    if (!chat) return <div />\n\n    return (\n        <div style={{ borderTop: '1px solid #f0f0f0' }}>\n            <SettingsBlock \n                id='ce-options-drop-down'\n                label={translate('Options', 'OptionsSettings')}\n                alwaysOpen\n            >\n                <div>\n                    <div style={{ height: '8px' }} />\n\n                    <Button \n                        value={translate('Delete', 'OptionsSettings')}\n                        theme='danger'\n                        icon='delete'\n                        id='ce-delete-chat-button'\n                        onClick={() => deleteChat(conn, chat.id, (data) => {})}\n                        style={{ width: '100%', marginBottom: '12px' }}\n                    />\n                </div>\n            </SettingsBlock>\n        </div>\n    )\n}\n\nexport default OptionsSettings\n","import React, { useState, useEffect, useRef, useContext } from 'react';\nimport PropTypes from 'prop-types'\n\nimport { editChat, TextInput, ChatEngineContext } from 'react-chat-engine'\n\nconst NewMessageForm = props => {\n    const { userCallbacks: { translate } } = useContext(ChatEngineContext);\n    const didMountRef = useRef(false)\n    const [state, setState] = useState({\n        activeChat: null,\n        value: ''\n    })\n  \n    function handleChange(event) {\n        setState({ ...state, value: event.target.value });\n    }\n  \n    function handleSubmit(event) {\n        event.preventDefault();\n\n        editChat(\n            props.conn, \n            props.chat.id,\n            {title: state.value},\n            (data) => {}\n        )\n    }\n\n    useEffect(() => {\n        if (!didMountRef.current) {\n            didMountRef.current = true\n\n        } else {\n            if(state.activeChat !== props.chat.id) {\n                setState({ \n                    ...state,\n                    value: props.chat.title,\n                    activeChat: props.chat.id\n                })\n            }\n        }\n    })\n\n    return (\n        <form onSubmit={(e) => handleSubmit(e)} className='ce-chat-title-form'>\n            <TextInput \n                label={translate('Rename this Chat', 'NewMessageForm')}\n                value={state.value} \n                default={props.chat.title}\n                handleChange={(e) => handleChange(e)} \n                style={{ \n                    fontSize: '16px',\n                    fontWeight: '600',\n                    textAlign: 'center',\n                    border: '0px solid white',\n                    width: '100%',\n                }}\n            />\n        </form>\n    );\n}\n\nexport default NewMessageForm\n\nNewMessageForm.propTypes = {\n    chat: PropTypes.object.isRequired,\n}","import React, { useContext } from 'react'\n\nimport { Avatar, ChatEngineContext } from 'react-chat-engine'\n\nimport TitleForm from './TitleForm'\n\nconst ChatSettingsTop = () => {\n    const { conn, chats, activeChat } = useContext(ChatEngineContext)  \n    const chat = chats && chats[activeChat] \n    \n    if (!chat || !conn || conn === null) return <div />\n\n    const topPeople = chat.people.slice(0, 3)\n    const otherPerson = getOtherPerson(chat.people)\n\n    function renderOnePerson(people) {\n        return (\n            <div style={{ width: '100%', paddingTop: '14px' }}>\n                <div style={{ float: 'left', position: 'relative', left: 'calc(50% - 22px)' }}>\n                    <Avatar \n                        show_online={false} \n                        username={people[0].person.username} \n                        avatar={people[0].person.avatar}\n                    />\n                </div>\n            </div>\n        )\n    }\n\n    function renderTwoPeople(people) {\n        return (\n            <div style={{ width: '100%', paddingTop: '14px' }}>\n                <div style={{ float: 'left', position: 'relative', left: 'calc(50% - 22px - 15px)' }}>\n                    <Avatar \n                        show_online={false} \n                        username={people[0].person.username} \n                        avatar={people[0].person.avatar}\n                    />\n                </div>\n\n                <div style={{ float: 'left', position: 'relative', left: 'calc(50% - 44px - 22px + 15px)' }}>\n                    <Avatar \n                        show_online={false} \n                        username={people[1].person.username} \n                        avatar={people[1].person.avatar}\n                    />\n                </div>\n            </div>\n        )\n    }\n\n    function renderThreePeople(people) {\n        return (\n            <div style={{ width: '100%', paddingTop: '14px' }}>\n                <div style={{ float: 'left', position: 'relative', left: 'calc(50% - 22px - 24px)' }}>\n                    <Avatar \n                        show_online={false} \n                        username={people[0].person.username}\n                        avatar={people[0].person.avatar}\n                    />\n                </div>\n\n                <div style={{ float: 'left', position: 'relative', left: 'calc(50% - 24px - 44px)' }}>\n                    <Avatar \n                        show_online={false} \n                        username={people[1].person.username} \n                        avatar={people[1].person.avatar}\n                    />\n                </div>\n\n                <div style={{ float: 'left', position: 'relative', left: 'calc(50% - 22px - 44px - 44px + 24px)' }}>\n                    <Avatar \n                        show_online={false} \n                        username={people[2].person.username}\n                        avatar={people[2].person.avatar}\n                    />\n                </div>\n            </div>\n        )\n    }\n\n    function getOtherPerson(people) {\n        return people.find(person => person.person.username !== conn.userName);\n    }\n    \n    return (\n        <div className='ce-chat-settings-container'>\n            <div className='ce-chat-avatars-row'>\n                { topPeople.length === 1 && renderOnePerson(topPeople) }\n                \n                { chat.is_direct_chat && otherPerson && renderOnePerson([otherPerson]) }\n\n                { !chat.is_direct_chat && otherPerson && topPeople.length === 2 && renderTwoPeople(topPeople) }\n\n                { !chat.is_direct_chat && otherPerson && topPeople.length === 3 && renderThreePeople(topPeople) }\n            </div>\n\n            {\n                chat.is_direct_chat && otherPerson ?\n                <div style={{ \n                    paddingTop: '55px',\n                    paddingBottom: '7px',\n                    fontSize: '16px',\n                    fontWeight: '600',\n                    textAlign: 'center',\n                    border: '0px solid white',\n                    width: '100%',\n                }}>\n                    { otherPerson.person.username }\n                </div> :\n                <TitleForm chat={chat} conn={conn} />\n            }\n        </div>\n    )\n}\n\nexport default ChatSettingsTop\n","import React, { useContext } from 'react'\n\nimport { ChatEngineContext } from 'react-chat-engine'\n\nimport PeopleSettings from './PeopleSettings'\nimport PhotosSettings from './PhotosSettings'\nimport OptionsSettings from './OptionsSettings'\nimport ChatSettingsTop from './ChatSettingsTop'\n\nconst ChatSettings = props => {\n    const { conn, chats, activeChat } = useContext(ChatEngineContext)  \n    const chat = chats && chats[activeChat] \n\n    if (conn === null) return <div />\n\n    return (\n        <div style={styles.settingsContainer} className='ce-settings'>\n            <div style={{ width: '90%', paddingLeft: '5%' }} className='ce-settings-container'>\n                {\n                    props.renderChatSettingsTop ?\n                    props.renderChatSettingsTop(conn, chat) :\n                    <ChatSettingsTop />\n                }\n\n                {\n                    props.renderPeopleSettings ?\n                    props.renderPeopleSettings(conn, chat) :\n                    <PeopleSettings />\n                }\n\n                {\n                    props.renderPhotosSettings ?\n                    props.renderPhotosSettings(chat) :\n                    <PhotosSettings />\n                }\n\n                {\n                    conn && chat && conn.userName === chat.admin.username  &&\n                    <div>\n                        {\n                            props.renderOptionsSettings ?\n                            props.renderOptionsSettings(conn, chat) :\n                            <OptionsSettings />\n                        }\n                    </div>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default ChatSettings\n\nconst styles = {\n    settingsContainer: { \n        height: '100%',\n        overflow: 'scroll',\n        overflowX: 'hidden',\n        borderLeft: '1px solid #afafaf',\n        backgroundColor: 'white',\n        flex: '1',\n        overflow: 'auto',\n        paddingBottom: '10px',\n    }\n}","import React, { useState, useContext } from 'react'\n\nimport { SettingOutlined, CloseOutlined } from '@ant-design/icons'\n\nimport { ChatEngineContext } from 'react-chat-engine'\n\nimport ChatSettings from '../../ChatSettings'\n\nconst ChatSettingsDrawer = props => {\n    const context = useContext(ChatEngineContext)\n    const { setIsOpen } = props;\n\n    return (\n        <div> \n            <SettingOutlined\n                onClick={() => setIsOpen(true)}\n                style={{\n                    color: 'rgb(24, 144, 255)',\n                    outline: 'none',\n                    fontSize: '1.5em',\n                }} \n            />\n        </div>\n    );\n}\n\nexport default ChatSettingsDrawer\n","import React, { useContext } from 'react'\n\nimport { ChatEngineContext } from 'react-chat-engine'\n\nimport ChatListDrawerButton from './ChatListDrawerButton'\nimport ChatSettingsDrawerButton from './ChatSettingsDrawerButton'\n\nimport { getDateTime } from '../../Utilities/timezone'\n\nimport { LoadingOutlined } from '@ant-design/icons'\n\nimport { Row, Col } from 'react-grid-system'\n\nimport { setConfiguration } from 'react-grid-system';\n\nsetConfiguration({ maxScreenClass: 'xl', gutterWidth: 0 });\n\nconst ChatHeader = (props) => {\n    const { conn, chats, activeChat, userCallbacks: { translate, formatDateTime } } = useContext(ChatEngineContext)\n\n    const chat = chats ? chats[activeChat] : undefined\n    const otherPerson = chat && conn && chat.people.find(person => person.person.username !== conn.userName)\n    const title = chat ? (chat.is_direct_chat && otherPerson ? otherPerson.person.username : chat.title) : undefined\n\n    var text = translate('Say hello!', 'ChatHeader')\n    if (!chat) {\n        text = translate('Loading...', 'ChatHeader')\n    } else if (chat.last_message.created && chat.last_message.created.length > 0) {\n        const dateTime = getDateTime(chat.last_message.created)\n        text = `${translate('Active', 'ChatHeader')} ${formatDateTime(dateTime, 'ago')}`\n    }\n\n    return (\n        <Row\n            className='ce-chat-title'\n            style={styles.titleSection}\n        >\n            <Col\n                xs={2}\n                sm={0}\n                style={{ ...styles.mobileOptiom, ...{ left: '6px' } }}\n                className='ce-chat-list-mobile-option'\n            >\n                <ChatListDrawerButton setIsOpen={props.setChatListIsOpen} />\n            </Col>\n\n            <Col\n                xs={8}\n                sm={12}\n                style={styles.titleContainer}\n                className='ce-chat-title-container'\n            >\n                <div\n                    style={styles.titleText}\n                    className='ce-chat-title-text'\n                    id={`ce-chat-feed-title-${title}`}\n                >\n                    {title ? title : <LoadingOutlined />}\n                </div>\n\n                <div style={styles.subtitleText} className='ce-chat-subtitle-text'>{text}</div>\n            </Col>\n\n            <Col\n                xs={2}\n                sm={0}\n                style={{ ...styles.mobileOptiom, ...{ right: '6px' } }}\n                className='ce-chat-settings-mobile-option'\n            >\n                <ChatSettingsDrawerButton setIsOpen={props.setChatSettingsIsOpen} />\n            </Col>\n        </Row>\n    );\n}\n\nexport default ChatHeader\n\nconst styles = {\n    titleSection: {\n        position: 'absolute',\n        top: '0px',\n        width: '100%',\n        zIndex: '1',\n        backgroundColor: 'rgb(256, 256, 256, 0.92)',\n    },\n    mobileOptiom: {\n        width: '100%',\n        top: '32px',\n        textAlign: 'center',\n        color: 'rgb(24, 144, 255)',\n        overflow: 'hidden'\n    },\n    titleContainer: {\n        width: '100%',\n        padding: '18px 0px',\n        textAlign: 'center',\n        color: 'rgb(24, 144, 255)',\n        overflowX: 'hidden'\n    },\n    titleText: {\n        fontSize: '24px',\n        fontWeight: '600',\n    },\n    subtitleText: {\n        fontSize: '12px',\n    }\n}\n","import React, { useState, useContext } from 'react'\n\nimport { MenuOutlined } from '@ant-design/icons'\n\nimport { ChatEngineContext } from '../../../Context'\n\nimport ChatList from '../../ChatList'\n\nconst ChatListDrawer = props => {\n    const {chatListIsOpen, setChatListIsOpen} = props\n    const context = useContext(ChatEngineContext)\n    const allProps = {...props, ...context.conn}\n\n    return (\n        <div>\n            { \n                chatListIsOpen &&\n                <div style={styles.drawerContainer}>\n                    {\n                        context.conn !== null && context.conn.renderChatList ?\n                        context.conn.renderChatList(context) :\n                        <ChatList \n                            {...allProps} \n                            onClose={() => setChatListIsOpen(false)} \n                            onChatClick={() => setChatListIsOpen(false)} \n                        />\n                    }\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default ChatListDrawer\n\nconst styles = {\n    drawerContainer: { \n        position: 'absolute',\n        zIndex: '1',\n        top: '0px',\n        left: '0px',\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'white',\n        textAlign: 'left'\n    },\n    titleContainer: {\n        width: '100%',\n        padding: '24px 0px',\n        textAlign: 'center',\n        color: 'rgb(24, 144, 255)',\n    },\n    titleText: {\n        fontSize: '24px',\n        fontWeight: '600',\n    }\n}\n","import React, { useState, useContext } from 'react'\n\nimport { SettingOutlined, CloseOutlined } from '@ant-design/icons'\n\nimport { ChatEngineContext } from 'react-chat-engine'\n\nimport ChatSettings from '../../ChatSettings'\n\nconst ChatSettingsDrawer = props => {\n    const {chatSettingsIsOpen, setChatSettingsIsOpen} = props\n    const context = useContext(ChatEngineContext)\n    const { userCallbacks: { translate } } = context;\n    const allProps = {...props, ...context.conn}\n\n    return (\n        <div className=\"ce-chat-settings\"> \n            { \n                chatSettingsIsOpen &&\n                <div style={styles.drawerContainer}>\n                    <CloseOutlined\n                        style={styles.closeIcon}\n                        onClick={() => setChatSettingsIsOpen(false)}\n                    />\n\n                    <div style={styles.titleContainer}>\n                        <div style={styles.titleText}>\n                        {translate('Chat Settings', 'ChatSettingsDrawer')}\n                        </div>\n                    </div>\n\n                    {\n                        context.conn !== null && context.conn.renderChatSettings ?\n                        context.conn.renderChatSettings(context) :\n                        <ChatSettings {...allProps} />\n                    }\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default ChatSettingsDrawer\n\nconst styles = {\n    drawerContainer: { \n        position: 'absolute',\n        zIndex: '1',\n        top: '0px',\n        left: '0px',\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'white',\n        textAlign: 'left',\n\n        display: 'flex',\n        flexFlow: 'column',\n    },\n    closeIcon: {\n        position: 'absolute',\n        left: '28px',\n        top: '32px'\n    },\n    titleContainer: {\n        width: '100%',\n        padding: '24px 0px',\n        textAlign: 'center',\n        color: 'rgb(24, 144, 255)',\n    },\n    titleText: {\n        fontSize: '24px',\n        fontWeight: '600',\n    },\n}\n","import React, { useContext } from 'react'\nimport { getDateTime } from '../../../Utilities/timezone'\n\nimport { ChatEngineContext } from 'react-chat-engine'\n\nconst DatePartition = props => {\n    const { userCallbacks: { formatDateTime } } = useContext(ChatEngineContext)\n    const { lastCreated, created } = props\n\n    function getDate(date) {\n        return date ? date.substr(0, 10) : null\n    }\n\n    const lastDate = getDate(lastCreated)\n    const thisDate = getDate(created)\n\n    if (lastCreated && lastDate === thisDate) return <div />\n\n    return (\n        <div style={styles.dateText} className='ce-message-date-text'>\n            { formatDateTime(getDateTime(created), 'datetime') }\n        </div>\n    )\n}\n\nexport default DatePartition\n\nconst styles = {\n    dateText: { \n        width: '100%', \n        textAlign: 'center',\n        paddingTop: '4px',\n        paddingBottom: '10px',\n        fontSize: '15px',\n        color: 'rgba(0, 0, 0, .40)'\n    }\n}","import React, { useState, useContext } from 'react'\n\nimport { LoadingOutlined } from '@ant-design/icons'\n\nimport { ChatEngineContext } from 'react-chat-engine'\n\nconst Thumbnail = props => {\n    const { userCallbacks: { openAttachment } } = useContext(ChatEngineContext);\n    const [hovered, setHovered] = useState(false)\n    const { attachment } = props\n    const style={ \n        ...styles.thumbnail, \n        ...{ border: hovered ? '1px solid #1890ff' : '1px solid #fff' } \n    }\n\n    if (!attachment) {\n        return (\n            <div style={styles.loadingContainer}>\n                <LoadingOutlined  style={{ color: 'white', padding: '4px', fontSize: '24px' }} />\n            </div>\n        )\n    }\n\n    return (\n        <img \n            onClick={() => openAttachment(attachment, 'image')}\n            onMouseEnter={() => setHovered(true)}\n            onMouseLeave={() => setHovered(false)}\n            src={attachment.file}\n            alt={'thumb-nail'}\n            style={style}\n        />\n    )\n}\n\nexport default Thumbnail\n\nconst styles = {\n    loadingContainer: {\n        width: '100%', \n        cursor: 'pointer',\n        textAlign: 'right', \n        display: 'inline-block', \n        objectFit: 'cover',\n        borderRadius: '0.3em',\n        marginRight: '2px',\n        marginBottom: '4px',\n        height: '30vw', \n        width: '30vw', \n        maxHeight: '200px',\n        maxWidth: '200px',\n        minHeight: '100px',\n        minWidth: '100px',\n        backgroundColor: '#d9d9d9',\n    },\n    thumbnail: { \n        width: '100%', \n        cursor: 'pointer',\n        textAlign: 'right', \n        display: 'inline', \n        objectFit: 'cover',\n        borderRadius: '0.3em',\n        paddingRight: '2px',\n\n        height: '30vw', \n        width: '30vw', \n        maxHeight: '200px',\n        maxWidth: '200px',\n        minHeight: '100px',\n        minWidth: '100px',\n    }\n}","import React, { useState, useContext } from 'react'\n\nimport { FileOutlined } from '@ant-design/icons'\n\nimport { getFileName } from './file'\n\nimport { LoadingOutlined } from '@ant-design/icons'\nimport { ChatEngineContext } from 'react-chat-engine'\n\nconst FileView = props => {\n    const { userCallbacks: { openAttachment } } = useContext(ChatEngineContext);\n    const [hovered, setHovered] = useState(false)\n    const { attachment } = props\n    const style={ \n        ...styles.fileView, \n        ...{ \n            color: hovered ? '#1890ff' : '#434343',\n            border: hovered ? '1px solid #1890ff' : '1px solid #434343',\n        } \n    }\n\n    if (!attachment) {\n        return (\n            <div style={styles.loadingContainer}>\n                <LoadingOutlined  style={{ color: 'white', padding: '4px', fontSize: '24px' }} />\n            </div>\n        )\n    }\n\n    return (\n        <div \n            style={style} \n            onMouseEnter={() => setHovered(true)}\n            onMouseLeave={() => setHovered(false)}\n            onClick={() => openAttachment(attachment, 'file')}\n        >\n            <FileOutlined />{' '}{ getFileName(attachment.file) }\n        </div>\n    )\n}\n\nexport default FileView\n\nconst styles = {\n    loadingContainer: {\n        display: 'inline-block', \n        borderRadius: '14px',\n        marginRight: '2px',\n        height: '48px', \n        width: '136px', \n        marginBottom: '4px',\n        marginLeft: '4px',\n        backgroundColor: '#d9d9d9',\n    },\n    fileView: { \n        padding: '12px',\n        borderRadius: '14px',\n        display: 'inline-block',\n        marginBottom: '4px',\n        marginRight: '2px',\n        cursor: 'pointer',\n    }\n}","\n\nconst colors = [\n    '#D64045',\n    '#5B3000',\n    '#00CC99',\n    '#467599',\n    '#1D3354',\n    '#8F250C',\n    '#6153CC',\n    '#961D4E',\n    '#A29F15',\n    '#0CAADC',\n    '#FF5154',\n    '#FA7921',\n    '#688E26',\n    '#550527',\n    '#A10702',\n    '#FF1053',\n    '#6C6EA0',\n    '#100B00',\n]\n\nfunction stringToNumber(str){\n    let sum = 0\n    for (var i = 0; i < str.length; i++) {\n        sum = sum + (str.charCodeAt(i) * i) - 97\n    }\n    return sum\n}\n\nexport function stringToColor(str) {\n    if (!str) {\n        return 'black'\n    } else {\n        return colors[stringToNumber(str) % colors.length]\n    }\n}","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { stringToColor } from '../../../Utilities/colorMapping' \n\n\nexport default class Dot extends Component {\n    state = { avatar: '' }\n\n    updateImg() {\n        let { avatar } = this.props\n        avatar = avatar && avatar !== null ? avatar : ''\n        \n        if (avatar.split('?')[0] !== this.state.avatar.split('?')[0]) {\n            this.setState({ avatar })\n        }\n    }\n\n    componentDidMount() { this.updateImg() }\n\n    componentDidUpdate() { this.updateImg() }\n\n    render() {\n        const { username } = this.props\n        const color = stringToColor(username)\n        const customStyle = this.props.style ? this.props.style : {}\n        \n        return (\n            <div\n                className='ce-avatar-dot'\n                style={{\n                    ...styles.dot,\n                    ...customStyle,\n                    ...{\n                        backgroundColor: this.state.avatar ? 'white' : color,\n                        backgroundImage: this.state.avatar && `url(${this.state.avatar})`,\n                        backgroundRepeat: 'no-repeat',\n                        backgroundPosition: 'center',\n                        backgroundSize: '14px',\n                        // Size Animations\n                        width: this.props.visible ? '13px' : '0px',\n                        height: this.props.visible ? '13px' : '0px',\n                    }\n                }}\n            />\n        )\n    }\n}\n\nconst styles = {\n    dot: {\n        borderRadius: '13px',\n        textAlign: 'center',\n        // CSS Transitions\n        transition: \"all .33s ease\",\n        WebkitTransition: \"all .33s ease\",\n        MozTransition: \"all .33s ease\",\n    }\n}\n\nDot.propTypes = {\n    avatar: PropTypes.string,\n    username: PropTypes.string,\n    style: PropTypes.object,\n}","import React, { useContext } from 'react'\nimport ReactHtmlParser from 'react-html-parser';\nimport { ChatEngineContext } from 'react-chat-engine'\n\nconst Body = props => {\n    const { userCallbacks: { htmlMessageTransform } } = useContext(ChatEngineContext)\n    let text = props.text ? props.text : '';\n    text = text\n        .replaceAll(\"<p>\", \"<div>\")\n        .replaceAll(\"</p>\", \"</div>\")\n        .replaceAll(\"<a \", `<a style=\"color: ${ props.myMessage ? 'white' : '#1890ff' };\" `);\n\n    let parserOptions = {};\n    if (htmlMessageTransform) {\n        parserOptions.transform = htmlMessageTransform;\n    }\n\n    return (\n        <div className='ce_message'>\n            {ReactHtmlParser(text, parserOptions)}\n        </div>\n    );\n}\n\nexport default Body","import React, { useState, useContext } from 'react'\n\nimport { ChatEngineContext } from 'react-chat-engine'\n\nimport _ from 'lodash'\n\nimport { getFileName, isImage } from './file'\n\nimport Thumbnail from './Thumbnail'\nimport FileView from './FileView'\n\nimport Dot from '../../../components/Avatar/Dot'\nimport { getDateTime } from '../../../Utilities/timezone'\n\nimport Body from './Body'\n\nimport { Row, Col, setConfiguration } from 'react-grid-system'\n\nsetConfiguration({ maxScreenClass: 'xl' })\n\nconst Message = props => {\n    const { userCallbacks: { formatDateTime } } = useContext(ChatEngineContext)\n    const [hovered, setHovered] = useState(false)\n\n    // function renderReads() {\n    //     const { chat, message } = props\n\n    //     if (!chat) { return <div /> }\n\n    //     return chat.people.map((chatPerson, index) => {\n    //         return (\n    //             <Dot\n    //                 key={`read_${index}`}\n    //                 avatar={chatPerson.person.avatar}\n    //                 username={chatPerson.person.username}\n    //                 visible={message.id === chatPerson.last_read}\n    //                 style={{ float: 'right', marginLeft: '4px' }}\n    //             />\n    //         )\n    //     })\n    // }\n\n    function renderImages() {\n        const { message } = props\n        const attachments = message && message.attachments ? message.attachments : []\n        return attachments.map((attachment, index) => {\n            const fileName = getFileName(attachment.file ? attachment.file : attachment.name)\n            if (isImage(fileName)) {\n                return <Thumbnail attachment={attachment.file && attachment} key={`attachment_${index}`} />\n            } else {\n                return <div key={`attachment${index}`} />\n            }\n        })\n    }\n\n    function renderFiles() {\n        const { message } = props\n        const attachments = message && message.attachments ? message.attachments : []\n        return attachments.map((attachment, index) => {\n            const fileName = getFileName(attachment.file ? attachment.file : attachment.name)\n            if (!isImage(fileName)) {\n                return <FileView attachment={attachment.file && attachment} key={`attachment_${index}`} />\n            } else {\n                return <div key={`attachment${index}`} />\n            }\n        })\n    }\n\n    const { lastMessage, message, nextMessage } = props\n\n    if (!message) { return <div /> }\n\n    const attachments = message && message.attachments && message.attachments\n\n    const topRightRadius = !lastMessage || lastMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em'\n    const bottomRightRadius = !nextMessage || nextMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em'\n\n    const borderRadius = `1.3em ${topRightRadius} ${bottomRightRadius} 1.3em`\n    const paddingBottom = (!nextMessage || nextMessage.sender_username !== message.sender_username) ? '12px' : '2px'\n\n    return (\n        <div\n            className='ce-message-row ce-my-message'\n            style={{ width: '100%', textAlign: 'right', paddingBottom }}\n        >\n            <div\n                style={{ display: 'auto' }}\n                className='ce-my-message-attachments-container ce-my-message-images-container'\n            >\n                {renderImages()}\n            </div>\n\n            <div\n                style={{ display: 'auto' }}\n                className='ce-my-message-attachments-container ce-my-message-files-container'\n            >\n                {renderFiles()}\n            </div>\n\n            <Row\n                style={{ paddingRight: '2px' }}\n                className='ce-message-bubble-row ce-my-message-bubble-row'\n            >\n                <Col xs={12} sm={12} md={12}>\n                    <span \n                        className='ce-message-timestamp ce-my-message-timestamp'\n                        style={{\n                            ...styles.timeTag,\n                            ...{ opacity: hovered ? '1' : '0' }\n                        }}\n                    >\n                        {formatDateTime(getDateTime(message.created), 'time')}\n                    </span>\n\n                    {   // TODO: What is !attachments for?\n                        !attachments || message.text &&\n                        <div\n                            className={`\n                                ce-message-bubble \n                                ce-my-message-bubble \n                                ${props.sending && 'ce-my-message-sinding-bubble'}\n                            `}\n                            style={{ \n                                ...styles.myMessage, \n                                ...{ borderRadius },\n                                ...{ backgroundColor: props.sending ? '#40a9ff' : 'rgb(24, 144, 255)' }\n                            }}\n                            onMouseEnter={() => setHovered(true)}\n                            onMouseLeave={() => setHovered(false)}\n                        >\n                            <Body myMessage={true} text={message.text} />\n                        </div>\n                    }\n                </Col>\n\n                <Col xs={1} sm={2} md={3} />\n\n                {/* <Col xs={12} className='ce-reads-row ce-my-reads-row'>\n                    {renderReads()}\n                </Col> */}\n            </Row>\n        </div>\n    )\n}\n\nexport default Message\n\nconst styles = {\n    myMessage: {\n        color: 'white',\n        cursor: 'pointer',\n        float: 'right', textAlign: 'left', // Stay right but render text\n        padding: '12px',\n        fontSize: '15px',\n        whiteSpace: 'pre-line',\n        overflowWrap: 'anywhere',\n        maxWidth: 'calc(100% - 100px)',\n        // CSS Transitions\n        transition: \"all .33s ease\",\n        WebkitTransition: \"all .33s ease\",\n        MozTransition: \"all .33s ease\",\n    },\n    timeTag: { \n        position: 'relative', \n        top: 'calc(50% - 12px)', \n        right: '8px', \n        fontSize: '14px', \n        color: 'rgb(24, 144, 255)',\n        // CSS Transitions\n        transition: \"all .15s ease\",\n        WebkitTransition: \"all .15s ease\",\n        MozTransition: \"all .15s ease\",\n    }\n}","import React, { useState, useContext } from 'react'\n\nimport { ChatEngineContext } from 'react-chat-engine'\n\nimport { getDateTime } from '../../../Utilities/timezone'\n\nimport { getFileName, isImage } from './file'\n\nimport FileView from './FileView'\nimport Thumbnail from './Thumbnail'\n\nimport { Avatar, Dot } from 'react-chat-engine'\n\nimport Body from './Body'\n\nimport { Row, Col, setConfiguration } from 'react-grid-system'\n\nsetConfiguration({ maxScreenClass: 'xl' })\n\n\nconst TheirMessage = props => {\n    const { userCallbacks: { formatDateTime } } = useContext(ChatEngineContext)\n    const [hovered, setHovered] = useState(false)\n\n    function renderReads() {\n        const { chat, message } = props\n\n        if (!chat) { return <div /> }\n\n        return chat.people.map((person, index) => {\n            return (\n                <Dot\n                    key={`read_${index}`}\n                    avatar={person.person.avatar}\n                    username={person.person.username}\n                    visible={message.id === person.last_read}\n                    style={{ float: 'left', marginLeft: '4px' }}\n                />\n            )\n        })\n    }\n\n    function renderImages() {\n        const { message } = props\n        const attachments = message && message.attachments ? message.attachments : []\n\n        return attachments.map((attachment, index) => {\n            const fileName = getFileName(attachment.file)\n            if (isImage(fileName)) {\n                return <Thumbnail attachment={attachment} key={`attachment_${index}`} />\n            } else {\n                return <div key={`attachment${index}`} />\n            }\n        })\n    }\n\n    function renderFiles() {\n        const { message } = props\n        const attachments = message && message.attachments ? message.attachments : []\n\n        return attachments.map((attachment, index) => {\n            const fileName = getFileName(attachment.file)\n            if (!isImage(fileName)) {\n                return <FileView attachment={attachment} key={`attachment_${index}`} />\n            } else {\n                return <div key={`attachment${index}`} />\n            }\n        })\n    }\n\n    const { lastMessage, message, nextMessage } = props\n\n    if (!message) { return <div /> }\n\n    const attachments = message && message.attachments && message.attachments\n\n    const topLeftRadius = !lastMessage || lastMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em'\n    const bottomLeftRadius = !nextMessage || nextMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em'\n\n    const borderRadius = `${topLeftRadius} 1.3em 1.3em ${bottomLeftRadius}`\n    const paddingBottom = !nextMessage || nextMessage.sender_username !== message.sender_username ? '12px' : '2px'\n\n    return (\n        <div\n            style={{ width: '100%', paddingBottom }}\n            className='ce-message-row ce-their-message'\n        >\n            {\n                (!lastMessage || lastMessage.sender_username !== message.sender_username) &&\n                <div style={styles.nameText} className='ce-their-message-sender'>\n                    {message.sender_username}\n                </div>\n            }\n\n            <Row style={{ paddingLeft: '2px' }} className='ce-their-message-row'>\n                <Col xs={12} sm={12} md={12}>\n                    <div style={{ height: '0px' }} className='ce-their-message-avatar'>\n                        {\n                            (!nextMessage || nextMessage.sender_username !== message.sender_username) &&\n                            <Avatar\n                                show_online={false}\n                                username={message.sender_username}\n                                avatar={message.sender && message.sender.avatar}\n                            />\n                        }\n                    </div>\n\n                    <div\n                        style={{ display: 'auto', paddingLeft: '50px' }}\n                        className='ce-their-message-attachments-container ce-their-message-images-container'\n                    >\n                        {renderImages()}\n                    </div>\n\n                    <div\n                        style={{ display: 'auto', paddingLeft: '50px' }}\n                        className='ce-their-message-attachments-container ce-their-message-files-container'\n                    >\n                        {renderFiles()}\n                    </div>\n\n                    {\n                        !attachments || message.text &&\n                        <div style={{ paddingLeft: '48px' }}>\n                            <div\n                                className='ce-message-bubble ce-their-message-bubble'\n                                style={{ ...styles.theirMessage, ...{ borderRadius } }}\n                                onMouseEnter={() => setHovered(true)}\n                                onMouseLeave={() => setHovered(false)}\n                            >\n                                <Body text={message.text} />\n                            </div>\n                        </div>\n                    }\n\n                    <span \n                        className='ce-message-timestamp ce-their-message-timestamp'\n                        style={{\n                            ...styles.timeTag,\n                            ...{ opacity: hovered ? '1' : '0' }\n                        }}\n                    >\n                        {formatDateTime(getDateTime(message.created), 'time')}\n                    </span>\n                </Col>\n\n                {/* Col is 9 to not slipp into RHS */}\n                <Col\n                    xs={9}\n                    style={{ marginLeft: '48px' }}\n                    className='ce-reads-row ce-their-reads-row'\n                >\n                    {renderReads()}\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default TheirMessage\n\nconst styles = {\n    theirMessage: {\n        cursor: 'pointer',\n        color: 'black',\n        float: 'left',\n        padding: '12px',\n        fontSize: '15px',\n        whiteSpace: 'pre-line',\n        backgroundColor: '#f1f0f0',\n        overflowWrap: 'anywhere',\n        maxWidth: 'calc(100% - 100px)',\n        // CSS Transitions\n        transition: \"all .33s ease\",\n        WebkitTransition: \"all .33s ease\",\n        MozTransition: \"all .33s ease\",\n    },\n    nameText: {\n        paddingLeft: '62px',\n        paddingBottom: '2px',\n        color: 'rgba(0, 0, 0, .40)',\n        fontSize: '15px'\n    },\n    timeTag: { \n        position: 'relative', \n        top: 'calc(50% - 12px)', \n        left: '8px', \n        fontSize: '14px', \n        color: 'rgba(0, 0, 0, 0.4)',\n        // CSS Transitions\n        transition: \"all .15s ease\",\n        WebkitTransition: \"all .15s ease\",\n        MozTransition: \"all .15s ease\",\n    }\n}","import React, { useContext } from 'react'\n\nimport { ChatEngineContext } from '../../../../Context'\n\nimport DatePartition from '../DatePartition'\n\nimport MyMessage from './MyMessage'\nimport TheirMessage from './TheirMessage'\n\nconst Message = props => {\n    const { lastMessage, message, nextMessage, chat } = props\n\n    const { conn } = useContext(ChatEngineContext)\n\n    if (!message || !chat) { return <div /> }\n\n    if (!conn || conn === null) { return <div /> }\n\n    return (\n        <div className='ce-message-and-date'>\n            <DatePartition \n                lastCreated={lastMessage ? lastMessage.created : null} \n                created={message.created} \n                offset={conn.offset}\n            />\n\n            {\n                message.sender_username === conn.userName || message.sender_username === conn.senderUsername ?\n                <MyMessage \n                    chat={chat}\n                    conn={conn}\n                    sending={!message.id}\n                    lastMessage={lastMessage}\n                    message={message}\n                    nextMessage={nextMessage}\n                /> :\n                <TheirMessage \n                    chat={chat}\n                    conn={conn}\n                    lastMessage={lastMessage}\n                    message={message}\n                    nextMessage={nextMessage}\n                />\n            }\n        </div>\n    ) \n}\n\nexport default Message","import React, { useContext } from 'react'\n\nimport { ChatEngineContext } from '../../../Context'\n\nimport { RenderTrigger } from '../Triggers'\n\nimport MessageBubble from './Bubble/index'\n\nconst Messages = props => {\n    const {\n        conn,\n        chats,\n        messages,\n        activeChat,\n        setIsBottomVisible,\n    } = useContext(ChatEngineContext)\n\n    const chat = chats && chats[activeChat]\n    const keys = Object.keys(messages)\n\n    if (!conn || conn === null || !chat) return <div />\n\n    return keys.map((key, index) => {\n        const message = messages[key]\n        const lastMessageKey = index === 0 ? null : keys[index - 1]\n        const nextMessageKey = index === keys.length - 1 ? null : keys[index + 1]\n\n        if (props.renderMessageBubble) {\n            return (\n                <div key={`message_${index}`}>\n                    {/* Scroll down if the top of last msg is visible */}\n                    {\n                        index === keys.length - 1 &&\n                        <RenderTrigger\n                            id='ce-first-message-render-trigger'\n                            onEnter={() => setIsBottomVisible(true)}\n                            onLeave={() => setIsBottomVisible(false)}\n                        />\n                    }\n\n                    {\n                        props.renderMessageBubble(\n                            conn,\n                            chat,\n                            messages[lastMessageKey],\n                            message,\n                            messages[nextMessageKey]\n                        )\n                    }\n                </div>\n            )\n        }\n\n        return (\n            <div key={`message_${index}`} id={`ce-message-${message.id}`}>\n                {/* Scroll down if the top of last msg is visible */}\n                {\n                    index === keys.length - 1 &&\n                    <RenderTrigger\n                        id='ce-last-message-render-trigger'\n                        onEnter={() => setIsBottomVisible(true)}\n                        onLeave={() => setIsBottomVisible(false)}\n                    />\n                }\n\n                <MessageBubble\n                    chat={chat}\n                    message={message}\n                    lastMessage={messages[lastMessageKey]}\n                    nextMessage={messages[nextMessageKey]}\n                />\n            </div>\n        )\n    })\n}\nexport default Messages","import React, { useContext, useRef, useState, useEffect } from 'react'\n\nimport { ChatEngineContext } from '../../../Context'\n\nimport { stringToColor } from '../../Utilities/colorMapping'\n\nconst IsTyping = () => {\n    const didMountRef = useRef(false)\n    const [currentTime, setCurrentTime] = useState(Date.now())\n    const { conn, activeChat, typingCounter, userCallbacks: { translate } } = useContext(ChatEngineContext)\n    const typers = typingCounter && typingCounter[activeChat] ? typingCounter[activeChat] : []\n\n    useEffect(() => {\n        if (!didMountRef.current) {\n            didMountRef.current = true\n            setInterval(() => {\n                setCurrentTime(Date.now())\n            }, 1000) // Check time every second\n        }\n    })\n\n    if (!conn || conn === null) return <div />\n\n    return (\n        <div>\n            {\n                Object.keys(typers).map((username, index) => {\n                    if (conn.userName !== username && currentTime < typers[username] + 2000) {\n                        return (\n                            <div \n                                key={`typer_${index}`} \n                                className='ce-user-typing-text'\n                                style={{ color: stringToColor(username), padding: '2px', paddingLeft: '12px' }}\n                            >\n                                {`${username} ${translate('is typing...', 'IsTyping')}`}\n                            </div>\n                        )\n\n                    } else {\n                        return <div key={`typer_${index}`} />\n                    }\n                })\n            }\n        </div>\n    )\n}\n\nexport default IsTyping","const images = ['jpg', 'jpeg', 'png', 'gif', 'tiff']\n\nexport const isImage = (fileName) => {\n    const dotSplit = fileName.split('.')\n    return dotSplit.length > 0 && images.indexOf(dotSplit[dotSplit.length - 1].toLowerCase()) !== -1\n}","import React, { useState } from 'react'\n\nimport { FileOutlined } from '@ant-design/icons'\n\nimport { CloseCircleTwoTone } from '@ant-design/icons'\n\nconst FilePreview = props => {\n    const [hovered, setHovered] = useState(false)\n\n    return (\n        <div \n            onMouseEnter={() => setHovered(true)}\n            onMouseLeave={() => setHovered(false)}\n            style={{\n                ...styles.filePreview,\n                ...{ paddingRight: hovered ? '6px' : '26px' }\n            }}\n        >\n            <FileOutlined />{' '}{ props.file && props.file.name } {' '}\n            \n            {\n                hovered &&\n                <CloseCircleTwoTone \n                    style={styles.closeIcon} \n                    onClick={() => props.onRemove && props.onRemove()}\n                />\n            }\n        </div>\n    )\n}\n\nexport default FilePreview\n\nconst styles = {\n    filePreview: { \n        padding: '12px', \n        display: 'inline-block', \n        position: \"relative\", \n        border: '1px solid #40a9ff',\n        color: '#434343',\n        borderRadius: '14px'\n    },\n    closeIcon: {\n    }\n}\n","import React from 'react'\n\nimport { isImage } from './isImage'\n\nimport FilePreview from './FilePreview'\n\nconst FilesRow = props => {\n    function renderFiles() {\n        return props.files.map((file, index) => {\n            if(!isImage(file.name)) {\n                return (\n                    <FilePreview \n                        file={file} \n                        key={`thumb_${index}`} \n                        onRemove={() => props.onRemove && props.onRemove(index)}\n                    />\n                )\n            } else { \n                return <div key={`no_file_${index}`} /> \n            }\n        })\n    }\n  \n    return (\n        <div \n            className='ce-message-files-row' \n            style={{ \n                width: '100%', \n                padding:  props.files.lenth > 0 ? '6px 16px' : '0px'\n            }}\n        >\n            { renderFiles() }\n        </div>\n    )\n}\n\nexport default FilesRow","import React, { useState, useEffect } from 'react'\n\nimport { CloseCircleTwoTone } from '@ant-design/icons'\n\nconst Thumbnail = props => {\n    const [hovered, setHovered] = useState(false)\n    const [blob, setBlob] = useState('')\n\n    useEffect(() => {\n      setBlob(URL.createObjectURL(props.file))\n    }, [props.file])\n    \n    return (\n        <div \n            style={{ padding: '6px', display: 'inline-block', position: \"relative\" }}\n            onMouseEnter={() => setHovered(true)}\n            onMouseLeave={() => setHovered(false)}\n        >\n            \n            <img\n                style={styles.imageSquare}\n                alt={props.file ? props.file.name : ''}\n                src={blob}\n            />\n\n            {\n                hovered &&\n                <CloseCircleTwoTone \n                    style={styles.closeIcon} \n                    onClick={() => props.onRemove && props.onRemove()}\n                />\n            }\n        </div>\n    )\n}\n\nexport default Thumbnail\n\nconst styles = {\n    imageSquare: { \n        height: '108px', \n        width: '108px', \n        border: '1px solid #afafaf',\n        borderRadius: '8px',\n        objectFit: 'cover',\n        display: 'inline',\n    },\n    closeIcon: {\n        position: 'absolute', \n        bottom: 'calc(100% - 32px)', \n        left: '96px', \n        width: '0px', \n        cursor: 'pointer'\n    }\n}\n","import React from 'react'\n\nimport Thumbnail from './Thumbnail'\n\nimport { isImage } from './isImage'\n\nconst ImagesRow = props => {\n    function renderFiles() {\n        return props.files.map((file, index) => {\n            if(isImage(file.name)) {\n                return (\n                    <Thumbnail \n                        file={file} \n                        key={`thumb_${index}`} \n                        onRemove={() => props.onRemove && props.onRemove(index)}\n                    />\n                )\n            } else { \n                return <div key={`no_thumb_${index}`} /> \n            }\n        })\n    }\n  \n    return (\n        <div\n            className='ce-message-images-row' \n            style={{ width: '100%', paddingLeft: '12px' }}\n        >\n            { renderFiles() }\n        </div>\n    )\n}\n\nexport default ImagesRow","import React, { useState } from 'react';\n\nimport { PaperClipOutlined } from '@ant-design/icons'\n\nconst AttachmentsInput = props => {\n    const [state, setState] = useState({\n        hovered: false,\n    })\n\n    function onSelect(event) {\n        const files = Array.from(event.target.files)\n        props.onSelectFiles &&  props.onSelectFiles(files)\n    }\n\n    return (\n        <form\n            className=\"uploader\"\n            encType=\"multipart/form-data\"\n            style={{ height: '0px' }}\n        >\n            <label\n                htmlFor=\"files\"\n                id='upload-document-button'\n            >\n                <PaperClipOutlined \n                    className='ce-attachment-icon'\n                    onMouseEnter={() => setState({ ...state, hovered: true })}\n                    onMouseLeave={() => setState({ ...state, hovered: false })}\n                    style={{\n                        ...styles.icon,\n                        ...{ color: state.hovered ? '#06c' : '#444' }\n                    }}\n                />\n            </label>\n\n            <input\n                multiple\n                id=\"files\"\n                style={{ visibility: \"hidden\" }}\n                type=\"file\"\n                accept=\"image/*,document/*,application/*,audio/*\"\n                onChange={(e) => onSelect(e)}\n                onClick={(e) => e.target.value = null}\n            />\n        </form>\n    );\n}\n\nconst styles = {\n    icon: {\n        background: 'none',\n        border: 'none',\n        cursor: 'pointer',\n        display: 'inline-block',\n        float: 'left',\n        height: '24px',\n        padding: '4px 5px',\n        width: '28px',\n    }\n}\n\nexport default AttachmentsInput\n","import React, { useState } from 'react'\n\nimport { ArrowUpOutlined } from '@ant-design/icons'\n\nconst SendButton = () => {\n    const [hover, setHover] = useState(false)\n\n    return (\n        <div \n            id=\"ce-send-message-button\"\n            onMouseEnter={() => setHover(true)}\n            onMouseLeave={() => setHover(false)}\n            style={{ \n                cursor: 'pointer',\n                backgroundColor: hover ? '#40a9ff' : '#1890ff',\n                display: 'inline-block',\n                padding: '8px 14px',\n                borderRadius: '8px',\n            }}\n        >\n            <ArrowUpOutlined style={{\n                color: 'white',\n                fontSize: '1.5em',\n            }} />\n        </div>\n    );\n}\n\nexport default SendButton\n","import React, {Component} from 'react'\n\nimport AttachmentsInput from './AttachmentsInput'\nimport SendButton from './SendButton'\n\nconst modules = {\n    toolbar: {\n        container: \"#toolbar\",\n    }\n}\n  \nconst formats = [\n    'bold', 'italic', 'underline', 'strike', 'code',\n    'list', 'bullet', 'indent',\n    'link', 'code',\n]\n\nexport default class FormHtmlEditor extends Component {\n    constructor(props) {\n        super(props)\n        if (document) {\n            this.quill = require('react-quill')\n        }\n    }\n\n    render() {\n        const Quill = this.quill\n        const { translate } = this.props;\n        if (!Quill) return <div />\n    \n        return (\n            <div className='ce-quill-container'>\n                <Quill\n                    theme=\"snow\"\n                    modules={modules}\n                    formats={formats}\n                    value={this.props.value}\n                    onChange={this.props.onChange}\n                    onKeyDown={(e) => { if (e.keyCode === 13) { this.props.onSubmit() } }}\n                />\n\n                <div id=\"toolbar\">\n                    <button className=\"ql-bold\"></button>\n                    <button className=\"ql-italic\"></button>\n                    <button className=\"ql-underline\"></button>\n                    <button className=\"ql-strike\"></button>\n\n                    <button className=\"ql-code\"></button>\n                    <button className=\"ql-link\"></button>\n                    <AttachmentsInput \n                        onSelectFiles={(attachments) => this.props.onAttach(attachments)} \n                    />\n\n                    <div \n                        className='ce-send-button-container'\n                        onClick={this.props.onSubmit.bind(this)}\n                        style={{\n                            position: 'absolute',\n                            right: '5px',\n                            bottom: '1px',\n                        }} \n                    >\n                        <SendButton />\n                    </div>\n                </div>\n\n                <style>{`\n                /*!\n                * Quill Editor v1.3.7\n                * https://quilljs.com/\n                * Copyright (c) 2014, Jason Chen\n                * Copyright (c) 2013, salesforce.com\n                */\n                .ql-container{box-sizing:border-box;font-family:Helvetica,Arial,sans-serif;font-size:13px;height:100%;margin:0;position:relative}.ql-container.ql-disabled .ql-tooltip{visibility:hidden}.ql-container.ql-disabled .ql-editor ul[data-checked]>li::before{pointer-events:none}.ql-clipboard{left:-100000px;height:1px;overflow-y:hidden;position:absolute;top:50%}.ql-clipboard p{margin:0;padding:0}.ql-editor{box-sizing:border-box;line-height:1.42;height:100%;outline:0;overflow-y:auto;padding:12px 15px;tab-size:4;-moz-tab-size:4;text-align:left;white-space:pre-wrap;word-wrap:break-word}.ql-editor>*{cursor:text}.ql-editor blockquote,.ql-editor h1,.ql-editor h2,.ql-editor h3,.ql-editor h4,.ql-editor h5,.ql-editor h6,.ql-editor ol,.ql-editor p,.ql-editor pre,.ql-editor ul{margin:0;padding:0;counter-reset:list-1 list-2 list-3 list-4 list-5 list-6 list-7 list-8 list-9}.ql-editor ol,.ql-editor ul{padding-left:1.5em}.ql-editor ol>li,.ql-editor ul>li{list-style-type:none}.ql-editor ul>li::before{content:{};}.ql-editor ul[data-checked=false]{pointer-events:none}.ql-editor ul[data-checked=false]>li *,.ql-editor ul[data-checked=true]>li *{pointer-events:all}.ql-editor ul[data-checked=false]>li::before,.ql-editor ul[data-checked=true]>li::before{color:#777;cursor:pointer;pointer-events:all}.ql-editor ul[data-checked=true]>li::before{content:{};}.ql-editor li:not(.ql-direction-rtl)::before{margin-left:-1.5em;margin-right:.3em;text-align:right}.ql-editor li.ql-direction-rtl::before{margin-left:.3em;margin-right:-1.5em}.ql-editor ol li:not(.ql-direction-rtl),.ql-editor ul li:not(.ql-direction-rtl){padding-left:1.5em}.ql-editor ol li.ql-direction-rtl,.ql-editor ul li.ql-direction-rtl{padding-right:1.5em}.ql-editor ol li{counter-reset:list-1 list-2 list-3 list-4 list-5 list-6 list-7 list-8 list-9;counter-increment:list-0}.ql-editor ol li:before{content:counter(list-0,decimal) '. '}.ql-editor ol li.ql-indent-1{counter-increment:list-1}.ql-editor ol li.ql-indent-1:before{content:counter(list-1,lower-alpha) '. '}.ql-editor ol li.ql-indent-1{counter-reset:list-2 list-3 list-4 list-5 list-6 list-7 list-8 list-9}.ql-editor ol li.ql-indent-2{counter-increment:list-2}.ql-editor ol li.ql-indent-2:before{content:counter(list-2,lower-roman) '. '}.ql-editor ol li.ql-indent-2{counter-reset:list-3 list-4 list-5 list-6 list-7 list-8 list-9}.ql-editor ol li.ql-indent-3{counter-increment:list-3}.ql-editor ol li.ql-indent-3:before{content:counter(list-3,decimal) '. '}.ql-editor ol li.ql-indent-3{counter-reset:list-4 list-5 list-6 list-7 list-8 list-9}.ql-editor ol li.ql-indent-4{counter-increment:list-4}.ql-editor ol li.ql-indent-4:before{content:counter(list-4,lower-alpha) '. '}.ql-editor ol li.ql-indent-4{counter-reset:list-5 list-6 list-7 list-8 list-9}.ql-editor ol li.ql-indent-5{counter-increment:list-5}.ql-editor ol li.ql-indent-5:before{content:counter(list-5,lower-roman) '. '}.ql-editor ol li.ql-indent-5{counter-reset:list-6 list-7 list-8 list-9}.ql-editor ol li.ql-indent-6{counter-increment:list-6}.ql-editor ol li.ql-indent-6:before{content:counter(list-6,decimal) '. '}.ql-editor ol li.ql-indent-6{counter-reset:list-7 list-8 list-9}.ql-editor ol li.ql-indent-7{counter-increment:list-7}.ql-editor ol li.ql-indent-7:before{content:counter(list-7,lower-alpha) '. '}.ql-editor ol li.ql-indent-7{counter-reset:list-8 list-9}.ql-editor ol li.ql-indent-8{counter-increment:list-8}.ql-editor ol li.ql-indent-8:before{content:counter(list-8,lower-roman) '. '}.ql-editor ol li.ql-indent-8{counter-reset:list-9}.ql-editor ol li.ql-indent-9{counter-increment:list-9}.ql-editor ol li.ql-indent-9:before{content:counter(list-9,decimal) '. '}.ql-editor .ql-indent-1:not(.ql-direction-rtl){padding-left:3em}.ql-editor li.ql-indent-1:not(.ql-direction-rtl){padding-left:4.5em}.ql-editor .ql-indent-1.ql-direction-rtl.ql-align-right{padding-right:3em}.ql-editor li.ql-indent-1.ql-direction-rtl.ql-align-right{padding-right:4.5em}.ql-editor .ql-indent-2:not(.ql-direction-rtl){padding-left:6em}.ql-editor li.ql-indent-2:not(.ql-direction-rtl){padding-left:7.5em}.ql-editor .ql-indent-2.ql-direction-rtl.ql-align-right{padding-right:6em}.ql-editor li.ql-indent-2.ql-direction-rtl.ql-align-right{padding-right:7.5em}.ql-editor .ql-indent-3:not(.ql-direction-rtl){padding-left:9em}.ql-editor li.ql-indent-3:not(.ql-direction-rtl){padding-left:10.5em}.ql-editor .ql-indent-3.ql-direction-rtl.ql-align-right{padding-right:9em}.ql-editor li.ql-indent-3.ql-direction-rtl.ql-align-right{padding-right:10.5em}.ql-editor .ql-indent-4:not(.ql-direction-rtl){padding-left:12em}.ql-editor li.ql-indent-4:not(.ql-direction-rtl){padding-left:13.5em}.ql-editor .ql-indent-4.ql-direction-rtl.ql-align-right{padding-right:12em}.ql-editor li.ql-indent-4.ql-direction-rtl.ql-align-right{padding-right:13.5em}.ql-editor .ql-indent-5:not(.ql-direction-rtl){padding-left:15em}.ql-editor li.ql-indent-5:not(.ql-direction-rtl){padding-left:16.5em}.ql-editor .ql-indent-5.ql-direction-rtl.ql-align-right{padding-right:15em}.ql-editor li.ql-indent-5.ql-direction-rtl.ql-align-right{padding-right:16.5em}.ql-editor .ql-indent-6:not(.ql-direction-rtl){padding-left:18em}.ql-editor li.ql-indent-6:not(.ql-direction-rtl){padding-left:19.5em}.ql-editor .ql-indent-6.ql-direction-rtl.ql-align-right{padding-right:18em}.ql-editor li.ql-indent-6.ql-direction-rtl.ql-align-right{padding-right:19.5em}.ql-editor .ql-indent-7:not(.ql-direction-rtl){padding-left:21em}.ql-editor li.ql-indent-7:not(.ql-direction-rtl){padding-left:22.5em}.ql-editor .ql-indent-7.ql-direction-rtl.ql-align-right{padding-right:21em}.ql-editor li.ql-indent-7.ql-direction-rtl.ql-align-right{padding-right:22.5em}.ql-editor .ql-indent-8:not(.ql-direction-rtl){padding-left:24em}.ql-editor li.ql-indent-8:not(.ql-direction-rtl){padding-left:25.5em}.ql-editor .ql-indent-8.ql-direction-rtl.ql-align-right{padding-right:24em}.ql-editor li.ql-indent-8.ql-direction-rtl.ql-align-right{padding-right:25.5em}.ql-editor .ql-indent-9:not(.ql-direction-rtl){padding-left:27em}.ql-editor li.ql-indent-9:not(.ql-direction-rtl){padding-left:28.5em}.ql-editor .ql-indent-9.ql-direction-rtl.ql-align-right{padding-right:27em}.ql-editor li.ql-indent-9.ql-direction-rtl.ql-align-right{padding-right:28.5em}.ql-editor .ql-video{display:block;max-width:100%}.ql-editor .ql-video.ql-align-center{margin:0 auto}.ql-editor .ql-video.ql-align-right{margin:0 0 0 auto}.ql-editor .ql-bg-black{background-color:#000}.ql-editor .ql-bg-red{background-color:#e60000}.ql-editor .ql-bg-orange{background-color:#f90}.ql-editor .ql-bg-yellow{background-color:#ff0}.ql-editor .ql-bg-green{background-color:#008a00}.ql-editor .ql-bg-blue{background-color:#06c}.ql-editor .ql-bg-purple{background-color:#93f}.ql-editor .ql-color-white{color:#fff}.ql-editor .ql-color-red{color:#e60000}.ql-editor .ql-color-orange{color:#f90}.ql-editor .ql-color-yellow{color:#ff0}.ql-editor .ql-color-green{color:#008a00}.ql-editor .ql-color-blue{color:#06c}.ql-editor .ql-color-purple{color:#93f}.ql-editor .ql-font-serif{font-family:Georgia,Times New Roman,serif}.ql-editor .ql-font-monospace{font-family:Monaco,Courier New,monospace}.ql-editor .ql-size-small{font-size:.75em}.ql-editor .ql-size-large{font-size:1.5em}.ql-editor .ql-size-huge{font-size:2.5em}.ql-editor .ql-direction-rtl{direction:rtl;text-align:inherit}.ql-editor .ql-align-center{text-align:center}.ql-editor .ql-align-justify{text-align:justify}.ql-editor .ql-align-right{text-align:right}.ql-editor.ql-blank::before{color:rgba(0,0,0,.6);content:attr(data-placeholder);font-style:italic;left:15px;pointer-events:none;position:absolute;right:15px}.ql-snow .ql-toolbar:after,.ql-snow.ql-toolbar:after{clear:both;content:'';display:table}.ql-snow .ql-toolbar button,.ql-snow.ql-toolbar button{background:0 0;border:none;cursor:pointer;display:inline-block;float:left;height:24px;padding:3px 5px;width:28px}.ql-snow .ql-toolbar button svg,.ql-snow.ql-toolbar button svg{float:left;height:100%}.ql-snow .ql-toolbar button:active:hover,.ql-snow.ql-toolbar button:active:hover{outline:0}.ql-snow .ql-toolbar input.ql-image[type=file],.ql-snow.ql-toolbar input.ql-image[type=file]{display:none}.ql-snow .ql-toolbar .ql-picker-item.ql-selected,.ql-snow .ql-toolbar .ql-picker-item:hover,.ql-snow .ql-toolbar .ql-picker-label.ql-active,.ql-snow .ql-toolbar .ql-picker-label:hover,.ql-snow .ql-toolbar button.ql-active,.ql-snow .ql-toolbar button:focus,.ql-snow .ql-toolbar button:hover,.ql-snow.ql-toolbar .ql-picker-item.ql-selected,.ql-snow.ql-toolbar .ql-picker-item:hover,.ql-snow.ql-toolbar .ql-picker-label.ql-active,.ql-snow.ql-toolbar .ql-picker-label:hover,.ql-snow.ql-toolbar button.ql-active,.ql-snow.ql-toolbar button:focus,.ql-snow.ql-toolbar button:hover{color:#06c}.ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-fill,.ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-stroke.ql-fill,.ql-snow .ql-toolbar .ql-picker-item:hover .ql-fill,.ql-snow .ql-toolbar .ql-picker-item:hover .ql-stroke.ql-fill,.ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-fill,.ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-stroke.ql-fill,.ql-snow .ql-toolbar .ql-picker-label:hover .ql-fill,.ql-snow .ql-toolbar .ql-picker-label:hover .ql-stroke.ql-fill,.ql-snow .ql-toolbar button.ql-active .ql-fill,.ql-snow .ql-toolbar button.ql-active .ql-stroke.ql-fill,.ql-snow .ql-toolbar button:focus .ql-fill,.ql-snow .ql-toolbar button:focus .ql-stroke.ql-fill,.ql-snow .ql-toolbar button:hover .ql-fill,.ql-snow .ql-toolbar button:hover .ql-stroke.ql-fill,.ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-fill,.ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-stroke.ql-fill,.ql-snow.ql-toolbar .ql-picker-item:hover .ql-fill,.ql-snow.ql-toolbar .ql-picker-item:hover .ql-stroke.ql-fill,.ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-fill,.ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-stroke.ql-fill,.ql-snow.ql-toolbar .ql-picker-label:hover .ql-fill,.ql-snow.ql-toolbar .ql-picker-label:hover .ql-stroke.ql-fill,.ql-snow.ql-toolbar button.ql-active .ql-fill,.ql-snow.ql-toolbar button.ql-active .ql-stroke.ql-fill,.ql-snow.ql-toolbar button:focus .ql-fill,.ql-snow.ql-toolbar button:focus .ql-stroke.ql-fill,.ql-snow.ql-toolbar button:hover .ql-fill,.ql-snow.ql-toolbar button:hover .ql-stroke.ql-fill{fill:#06c}.ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-stroke,.ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-stroke-miter,.ql-snow .ql-toolbar .ql-picker-item:hover .ql-stroke,.ql-snow .ql-toolbar .ql-picker-item:hover .ql-stroke-miter,.ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-stroke,.ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-stroke-miter,.ql-snow .ql-toolbar .ql-picker-label:hover .ql-stroke,.ql-snow .ql-toolbar .ql-picker-label:hover .ql-stroke-miter,.ql-snow .ql-toolbar button.ql-active .ql-stroke,.ql-snow .ql-toolbar button.ql-active .ql-stroke-miter,.ql-snow .ql-toolbar button:focus .ql-stroke,.ql-snow .ql-toolbar button:focus .ql-stroke-miter,.ql-snow .ql-toolbar button:hover .ql-stroke,.ql-snow .ql-toolbar button:hover .ql-stroke-miter,.ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-stroke,.ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-stroke-miter,.ql-snow.ql-toolbar .ql-picker-item:hover .ql-stroke,.ql-snow.ql-toolbar .ql-picker-item:hover .ql-stroke-miter,.ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-stroke,.ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-stroke-miter,.ql-snow.ql-toolbar .ql-picker-label:hover .ql-stroke,.ql-snow.ql-toolbar .ql-picker-label:hover .ql-stroke-miter,.ql-snow.ql-toolbar button.ql-active .ql-stroke,.ql-snow.ql-toolbar button.ql-active .ql-stroke-miter,.ql-snow.ql-toolbar button:focus .ql-stroke,.ql-snow.ql-toolbar button:focus .ql-stroke-miter,.ql-snow.ql-toolbar button:hover .ql-stroke,.ql-snow.ql-toolbar button:hover .ql-stroke-miter{stroke:#06c}@media (pointer:coarse){.ql-snow .ql-toolbar button:hover:not(.ql-active),.ql-snow.ql-toolbar button:hover:not(.ql-active){color:#444}.ql-snow .ql-toolbar button:hover:not(.ql-active) .ql-fill,.ql-snow .ql-toolbar button:hover:not(.ql-active) .ql-stroke.ql-fill,.ql-snow.ql-toolbar button:hover:not(.ql-active) .ql-fill,.ql-snow.ql-toolbar button:hover:not(.ql-active) .ql-stroke.ql-fill{fill:#444}.ql-snow .ql-toolbar button:hover:not(.ql-active) .ql-stroke,.ql-snow .ql-toolbar button:hover:not(.ql-active) .ql-stroke-miter,.ql-snow.ql-toolbar button:hover:not(.ql-active) .ql-stroke,.ql-snow.ql-toolbar button:hover:not(.ql-active) .ql-stroke-miter{stroke:#444}}.ql-snow{box-sizing:border-box}.ql-snow *{box-sizing:border-box}.ql-snow .ql-hidden{display:none}.ql-snow .ql-out-bottom,.ql-snow .ql-out-top{visibility:hidden}.ql-snow .ql-tooltip{position:absolute;transform:translateY(10px)}.ql-snow .ql-tooltip a{cursor:pointer;text-decoration:none}.ql-snow .ql-tooltip.ql-flip{transform:translateY(-10px)}.ql-snow .ql-formats{display:inline-block;vertical-align:middle}.ql-snow .ql-formats:after{clear:both;content:'';display:table}.ql-snow .ql-stroke{fill:none;stroke:#444;stroke-linecap:round;stroke-linejoin:round;stroke-width:2}.ql-snow .ql-stroke-miter{fill:none;stroke:#444;stroke-miterlimit:10;stroke-width:2}.ql-snow .ql-fill,.ql-snow .ql-stroke.ql-fill{fill:#444}.ql-snow .ql-empty{fill:none}.ql-snow .ql-even{fill-rule:evenodd}.ql-snow .ql-stroke.ql-thin,.ql-snow .ql-thin{stroke-width:1}.ql-snow .ql-transparent{opacity:.4}.ql-snow .ql-direction svg:last-child{display:none}.ql-snow .ql-direction.ql-active svg:last-child{display:inline}.ql-snow .ql-direction.ql-active svg:first-child{display:none}.ql-snow .ql-editor h1{font-size:2em}.ql-snow .ql-editor h2{font-size:1.5em}.ql-snow .ql-editor h3{font-size:1.17em}.ql-snow .ql-editor h4{font-size:1em}.ql-snow .ql-editor h5{font-size:.83em}.ql-snow .ql-editor h6{font-size:.67em}.ql-snow .ql-editor a{text-decoration:underline}.ql-snow .ql-editor blockquote{border-left:4px solid #ccc;margin-bottom:5px;margin-top:5px;padding-left:16px}.ql-snow .ql-editor code,.ql-snow .ql-editor pre{background-color:#f0f0f0;border-radius:3px}.ql-snow .ql-editor pre{white-space:pre-wrap;margin-bottom:5px;margin-top:5px;padding:5px 10px}.ql-snow .ql-editor code{font-size:85%;padding:2px 4px}.ql-snow .ql-editor pre.ql-syntax{background-color:#23241f;color:#f8f8f2;overflow:visible}.ql-snow .ql-editor img{max-width:100%}.ql-snow .ql-picker{color:#444;display:inline-block;float:left;font-size:14px;font-weight:500;height:24px;position:relative;vertical-align:middle}.ql-snow .ql-picker-label{cursor:pointer;display:inline-block;height:100%;padding-left:8px;padding-right:2px;position:relative;width:100%}.ql-snow .ql-picker-label::before{display:inline-block;line-height:22px}.ql-snow .ql-picker-options{background-color:#fff;display:none;min-width:100%;padding:4px 8px;position:absolute;white-space:nowrap}.ql-snow .ql-picker-options .ql-picker-item{cursor:pointer;display:block;padding-bottom:5px;padding-top:5px}.ql-snow .ql-picker.ql-expanded .ql-picker-label{color:#ccc;z-index:2}.ql-snow .ql-picker.ql-expanded .ql-picker-label .ql-fill{fill:#ccc}.ql-snow .ql-picker.ql-expanded .ql-picker-label .ql-stroke{stroke:#ccc}.ql-snow .ql-picker.ql-expanded .ql-picker-options{display:block;margin-top:-1px;top:100%;z-index:1}.ql-snow .ql-color-picker,.ql-snow .ql-icon-picker{width:28px}.ql-snow .ql-color-picker .ql-picker-label,.ql-snow .ql-icon-picker .ql-picker-label{padding:2px 4px}.ql-snow .ql-color-picker .ql-picker-label svg,.ql-snow .ql-icon-picker .ql-picker-label svg{right:4px}.ql-snow .ql-icon-picker .ql-picker-options{padding:4px 0}.ql-snow .ql-icon-picker .ql-picker-item{height:24px;width:24px;padding:2px 4px}.ql-snow .ql-color-picker .ql-picker-options{padding:3px 5px;width:152px}.ql-snow .ql-color-picker .ql-picker-item{border:1px solid transparent;float:left;height:16px;margin:2px;padding:0;width:16px}.ql-snow .ql-picker:not(.ql-color-picker):not(.ql-icon-picker) svg{position:absolute;margin-top:-9px;right:0;top:50%;width:18px}.ql-snow .ql-picker.ql-font .ql-picker-item[data-label]:not([data-label=''])::before,.ql-snow .ql-picker.ql-font .ql-picker-label[data-label]:not([data-label=''])::before,.ql-snow .ql-picker.ql-header .ql-picker-item[data-label]:not([data-label=''])::before,.ql-snow .ql-picker.ql-header .ql-picker-label[data-label]:not([data-label=''])::before,.ql-snow .ql-picker.ql-size .ql-picker-item[data-label]:not([data-label=''])::before,.ql-snow .ql-picker.ql-size .ql-picker-label[data-label]:not([data-label=''])::before{content:attr(data-label)}.ql-snow .ql-picker.ql-header{width:98px}.ql-snow .ql-picker.ql-header .ql-picker-item::before,.ql-snow .ql-picker.ql-header .ql-picker-label::before{content:'${translate('Normal', 'FormHtmlEditor')}'}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"1\"]::before,.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"1\"]::before{content:'${translate('Heading 1', 'FormHtmlEditor')}'}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"2\"]::before,.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"2\"]::before{content:'${translate('Heading 2', 'FormHtmlEditor')}'}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"3\"]::before,.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"3\"]::before{content:'${translate('Heading 3', 'FormHtmlEditor')}'}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"4\"]::before,.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"4\"]::before{content:'${translate('Heading 4', 'FormHtmlEditor')}'}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"5\"]::before,.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"5\"]::before{content:'${translate('Heading 5', 'FormHtmlEditor')}'}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"6\"]::before,.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"6\"]::before{content:'${translate('Heading 6', 'FormHtmlEditor')}'}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"1\"]::before{font-size:2em}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"2\"]::before{font-size:1.5em}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"3\"]::before{font-size:1.17em}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"4\"]::before{font-size:1em}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"5\"]::before{font-size:.83em}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"6\"]::before{font-size:.67em}.ql-snow .ql-picker.ql-font{width:108px}.ql-snow .ql-picker.ql-font .ql-picker-item::before,.ql-snow .ql-picker.ql-font .ql-picker-label::before{content:'${translate('Sans Serif', 'FormHtmlEditor')}'}.ql-snow .ql-picker.ql-font .ql-picker-item[data-value=serif]::before,.ql-snow .ql-picker.ql-font .ql-picker-label[data-value=serif]::before{content:'${translate('Serif', 'FormHtmlEditor')}'}.ql-snow .ql-picker.ql-font .ql-picker-item[data-value=monospace]::before,.ql-snow .ql-picker.ql-font .ql-picker-label[data-value=monospace]::before{content:'${translate('Monospace', 'FormHtmlEditor')}'}.ql-snow .ql-picker.ql-font .ql-picker-item[data-value=serif]::before{font-family:Georgia,Times New Roman,serif}.ql-snow .ql-picker.ql-font .ql-picker-item[data-value=monospace]::before{font-family:Monaco,Courier New,monospace}.ql-snow .ql-picker.ql-size{width:98px}.ql-snow .ql-picker.ql-size .ql-picker-item::before,.ql-snow .ql-picker.ql-size .ql-picker-label::before{content:'${translate('Normal', 'FormHtmlEditor')}'}.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=small]::before,.ql-snow .ql-picker.ql-size .ql-picker-label[data-value=small]::before{content:'${translate('Small', 'FormHtmlEditor')}'}.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=large]::before,.ql-snow .ql-picker.ql-size .ql-picker-label[data-value=large]::before{content:'${translate('Large', 'FormHtmlEditor')}'}.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=huge]::before,.ql-snow .ql-picker.ql-size .ql-picker-label[data-value=huge]::before{content:'${translate('Huge', 'FormHtmlEditor')}'}.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=small]::before{font-size:10px}.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=large]::before{font-size:18px}.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=huge]::before{font-size:32px}.ql-snow .ql-color-picker.ql-background .ql-picker-item{background-color:#fff}.ql-snow .ql-color-picker.ql-color .ql-picker-item{background-color:#000}.ql-toolbar.ql-snow{border:1px solid #ccc;box-sizing:border-box;font-family:'Helvetica Neue',Helvetica,Arial,sans-serif;padding:8px}.ql-toolbar.ql-snow .ql-formats{margin-right:15px}.ql-toolbar.ql-snow .ql-picker-label{border:1px solid transparent}.ql-toolbar.ql-snow .ql-picker-options{border:1px solid transparent;box-shadow:rgba(0,0,0,.2) 0 2px 8px}.ql-toolbar.ql-snow .ql-picker.ql-expanded .ql-picker-label{border-color:#ccc}.ql-toolbar.ql-snow .ql-picker.ql-expanded .ql-picker-options{border-color:#ccc}.ql-toolbar.ql-snow .ql-color-picker .ql-picker-item.ql-selected,.ql-toolbar.ql-snow .ql-color-picker .ql-picker-item:hover{border-color:#000}.ql-toolbar.ql-snow+.ql-container.ql-snow{border-top:0}.ql-snow .ql-tooltip{background-color:#fff;border:1px solid #ccc;box-shadow:0 0 5px #ddd;color:#444;padding:5px 12px;white-space:nowrap}.ql-snow .ql-tooltip::before{content:\"${translate(\"Visit URL:\", \"FormHtmlEditor\")}\";line-height:26px;margin-right:8px}.ql-snow .ql-tooltip input[type=text]{display:none;border:1px solid #ccc;font-size:13px;height:26px;margin:0;padding:3px 5px;width:170px}.ql-snow .ql-tooltip a.ql-preview{display:inline-block;max-width:200px;overflow-x:hidden;text-overflow:ellipsis;vertical-align:top}.ql-snow .ql-tooltip a.ql-action::after{border-right:1px solid #ccc;content:'${translate('Edit', 'FormHtmlEditor')}';margin-left:16px;padding-right:8px}.ql-snow .ql-tooltip a.ql-remove::before{content:'${translate('Remove', 'FormHtmlEditor')}';margin-left:8px}.ql-snow .ql-tooltip a{line-height:26px}.ql-snow .ql-tooltip.ql-editing a.ql-preview,.ql-snow .ql-tooltip.ql-editing a.ql-remove{display:none}.ql-snow .ql-tooltip.ql-editing input[type=text]{display:inline-block}.ql-snow .ql-tooltip.ql-editing a.ql-action::after{border-right:0;content:'${translate('Save', 'FormHtmlEditor')}';padding-right:0}.ql-snow .ql-tooltip[data-mode=link]::before{content:\"${translate(\"Enter link:\", \"FormHtmlEditor\")}\"}.ql-snow .ql-tooltip[data-mode=formula]::before{content:\"${translate(\"Enter formula:\", \"FormHtmlEditor\")}\"}.ql-snow .ql-tooltip[data-mode=video]::before{content:\"${translate(\"Enter video:\", \"FormHtmlEditor\")}\"}.ql-snow a{color:#06c}.ql-container.ql-snow{border:1px solid #ccc}\n                `}</style>\n            </div>\n        )\n    }\n}","import React, { useContext, useState, useEffect } from 'react'\n\nimport { sendMessage, isTyping, ChatEngineContext } from 'react-chat-engine'\n\nimport FilesRow from './FilesRow'\nimport ImagesRow from './ImagesRow'\n\nimport NextQuill from './NextQuill'\n\nconst NewMessageForm = () => {\n  const { \n    conn, \n    activeChat, \n    messages, \n    setMessages,\n    userCallbacks: { translate, onMessageSent },\n  } = useContext(ChatEngineContext)\n  \n  const [iter, setIter] = useState(0) // Forces attachments update\n  const [value, setValue] = useState('')\n  const [trigger, setTrigger] = useState(0)\n  const [attachments, setAttachments] = useState([])\n\n  function onRemove(index) {\n    const newAttachments = attachments\n    newAttachments.splice(index, 1)\n    setAttachments(newAttachments)\n    setIter(iter + 1)\n  }\n  \n  function handleChange(value) {\n    setValue(value)\n    setTrigger((trigger + 1) % 4)\n    if (trigger === 1) { conn && isTyping(conn, activeChat) }\n  }\n  \n  function handleSubmit() {\n    if (!conn) return \n\n    let text = value.trim()\n    if (text.length > 11 && text.slice(-11) === '<p><br></p>') { text = text.substr(0, text.length - 11) }\n\n    const custom_json = { sender_id: Date.now().toString() }\n    const sender_username = conn.userName ? conn.userName : conn.senderUsername\n    const created = new Date().toISOString().replace('T', ' ').replace('Z', `${Math.floor(Math.random() * 1000)}+00:00`)\n    const data = { text, attachments, custom_json, sender_username, chat: activeChat, created }\n\n    if (text.length > 0 || attachments.length > 0) {\n      sendMessage(conn, activeChat, data, () => {});\n\n      let newMessages = {...messages}\n      newMessages[data.created] = data\n      setMessages(newMessages)\n      onMessageSent(\n        activeChat,\n        data.text,\n        {\n          createdAt: data.created,\n          attachments: data.attachments,\n          senderId: data.custom_json.sender_id,\n          username: data.sender_username,\n        }\n      );\n    }\n    setValue('')\n    setAttachments([])\n  }\n\n  return (\n    <div \n      id='msg-form-container'\n      style={styles.NewMessageFormContainer}\n      className='ce-message-form-container'\n    >\n      <ImagesRow files={attachments} onRemove={(i) => onRemove(i)} />\n\n      <FilesRow files={attachments} onRemove={(i) => onRemove(i)} />\n\n      <NextQuill\n        theme='snow'\n        value={value}\n        onChange={handleChange.bind(this)}\n        onSubmit={handleSubmit.bind(this)}\n        onAttach={setAttachments.bind(this)}\n        translate={translate}\n      />\n    </div>\n  );\n}\n\nexport default NewMessageForm\n\nconst styles = {\n  NewMessageFormContainer: { \n    position: 'absolute', \n    bottom: '0px', \n    width: '100%', \n    backgroundColor: 'white',\n  },\n}","import React, { useContext, useState, useEffect, useRef } from 'react'\n\nimport { ChatEngineContext } from '../../../Context'\n\nimport { SyncOutlined } from '@ant-design/icons'\n\nconst ConnectionBar = props => {\n    const didMountRef = useRef(false)\n    const [isVisible, setIsVisible] = useState(false)\n    const { connecting, userCallbacks: { translate } } = useContext(ChatEngineContext)\n\n    useEffect(() => {\n        if (!didMountRef.current) {\n            didMountRef.current = true\n            setTimeout(\n                () => setIsVisible(true), \n                props.renderDelay ? props.renderDelay : 0\n            )\n        }\n    })\n\n    if (!connecting || !isVisible) return <div />\n\n    return (\n        <div\n            style={{\n                zIndex: '1',\n                bottom: '100px', \n                left: '0',\n                right: '0',\n                position: 'absolute',\n                textAlign: 'center',\n            }}\n        >\n            <span\n                style={{\n                    fontSize: '15px',\n                    padding: '10px 22px', \n                    color: 'white',\n                    display: 'inline-block',\n                    backgroundColor: '#fa8c16',\n                    borderRadius: '1.3em',\n                }}\n                id='ce-connecting-popup'\n            >\n                <SyncOutlined spin />{' '}{translate('Connecting', 'ConnectionBar')}\n            </span>\n        </div>\n    )\n}\n\nexport default ConnectionBar\n","import React, { useContext, useState, useEffect, useRef } from 'react'\n\nimport { ChatEngineContext } from 'react-chat-engine'\n\nimport { CaretDownOutlined } from '@ant-design/icons'\n\nimport { animateScroll } from \"react-scroll\"\n\nconst ScrollDownBar = (props) => {\n    const didMountRef = useRef(false)\n    const [isVisible, setIsVisible] = useState(false)\n    const { conn, isBottomVisible, userCallbacks: { translate } } = useContext(ChatEngineContext)\n    const { chat } = props\n\n    useEffect(() => {\n        if (!didMountRef.current) {\n            didMountRef.current = true\n            setTimeout(\n                () => setIsVisible(true), \n                props.renderDelay ? props.renderDelay : 0\n            )\n        }\n    })\n\n    if (conn === null || !chat || chat === null) return <div />\n\n    let lastReadMessage = undefined\n    chat.people.map(person => {\n        if (person.person.username === conn.userName) {\n            lastReadMessage = person.last_read\n        }\n    })\n\n    if (\n        !isVisible ||\n        isBottomVisible ||\n        chat.last_message.id === undefined ||\n        chat.last_message.id === lastReadMessage\n    ) { return <div /> }\n\n    return (\n        <div\n            style={{\n                zIndex: '1',\n                bottom: '100px', \n                left: '0',\n                right: '0',\n                position: 'absolute',\n                textAlign: 'center',\n            }}\n        >\n            <div\n                style={{\n                    fontSize: '15px',\n                    padding: '10px 22px',\n                    color: 'white',\n                    display: 'inline-block',\n                    backgroundColor: '#389e0d',\n                    borderRadius: '1.3em',\n                    cursor: 'pointer',\n                }}\n                id='ce-scroll-down-bar'\n                onClick={() => animateScroll.scrollToBottom({ duration: 333, containerId: \"ce-feed-container\" })}\n            >\n                <CaretDownOutlined />\n                {' '}\n                {conn.userName ? translate('Unread Messages', 'ScrollDownBar') : translate('Scroll to Bottom', 'ScrollDownBar')}\n            </div>\n        </div>\n    )\n}\n\nexport default ScrollDownBar\n","import React, { useContext, useState, useEffect } from 'react'\n\nimport { ChatEngineContext, getLatestMessages, readMessage } from 'react-chat-engine'\n\nimport { AuthFail, CreateChat, IceBreaker } from './Steps'\n\nimport { RenderTrigger } from './Triggers'\n\nimport ChatHeader from './ChatHeader'\nimport ChatListDrawer from './ChatHeader/ChatListDrawer'\nimport ChatSettingsDrawer from './ChatHeader/ChatSettingsDrawer'\nimport Messages from './Messages'\nimport IsTyping from './IsTyping'\nimport NewMessageForm from './NewMessageForm'\nimport ConnectionBar from './ConnectionBar'\nimport ScrollDownBar from './ScrollDownBar'\n\nimport _ from 'lodash'\n\nimport { animateScroll } from \"react-scroll\"\n\nconst initial = 45\nlet count = initial\nconst interval = 33\n\nconst ChatFeed = props => {\n    const [hasFetchedMessages, setHasFetchedMessages] = useState(false)\n    const [chatListIsOpen, setChatListIsOpen] = useState(false)\n    const [chatSettingsIsOpen, setChatSettingsIsOpen] = useState(false)\n    const [currentChat, setCurrentChat] = useState(null)\n    const {\n        conn,\n        chats, setChats,\n        messages, setMessages,\n        activeChat, setActiveChat,\n        loadMoreMessages, setLoadMoreMessages,\n        isBottomVisible,\n        typingCounter\n    } = useContext(ChatEngineContext)\n\n    const typers = typingCounter && typingCounter[activeChat] ? typingCounter[activeChat] : []\n    const chat = chats && chats[currentChat]\n    const needsIceBreaker = hasFetchedMessages && _.isEmpty(messages)\n\n    function onReadMessage(chat) {\n        if (chats) {\n            const newChats = { ...chats }\n            newChats[chat.id] = chat\n            setChats(newChats)\n        }\n    }\n\n    function onGetMessages(chatId, messages, scrollDownTo) {\n        setHasFetchedMessages(true)\n        setMessages(_.mapKeys(messages, 'created'))\n\n        if (messages.length > 0) {\n            const message = messages[messages.length - 1]\n\n            if (props.userName && props.userName !== message.sender_username) {\n                readMessage(conn, chatId, message.id, (chat) => onReadMessage(chat))\n            }\n        }\n\n        if (scrollDownTo) {\n            animateScroll.scrollToBottom({ duration: 0, containerId: scrollDownTo })\n        }\n\n        props.onGetMessages && props.onGetMessages(chatId, messages)\n    }\n\n    function loadMessages(loadMoreMessages) {\n        // Message Loader triggers\n        if (loadMoreMessages) {\n            count = count + interval\n            setLoadMoreMessages(false)\n\n            getLatestMessages(\n                conn, activeChat, count,\n                (chatId, messages) => onGetMessages(chatId, messages, false)\n            )\n\n            // Active Chat passed by context\n        } else if (conn && !props.activeChat && activeChat !== null && activeChat !== currentChat) {\n            count = initial\n            setCurrentChat(activeChat)\n\n            getLatestMessages(\n                conn, activeChat, count,\n                (chatId, messages) => onGetMessages(chatId, messages, \"ce-feed-container\")\n            )\n\n            // Active Chat passed by props\n        } else if (conn && props.activeChat && props.activeChat !== currentChat) {\n            count = initial\n            setActiveChat(props.activeChat)\n            setCurrentChat(props.activeChat)\n\n            getLatestMessages(\n                conn, props.activeChat, count,\n                (chatId, messages) => onGetMessages(chatId, messages, \"ce-feed-container\")\n            )\n        }\n    }\n\n    useEffect(() => { loadMessages(false) }, [conn, activeChat, currentChat])\n    useEffect(() => { loadMessages(loadMoreMessages) }, [loadMoreMessages])\n\n    function getMyLastMessage(userName, chat) {\n        let lastReadMessage = undefined\n        chat.people.map(person => {\n            if (person.person.username === userName) {\n                lastReadMessage = person.last_read\n            }\n        })\n        return lastReadMessage\n    }\n\n    useEffect(() => {\n        // Scroll on new incoming messages\n        if (isBottomVisible && !_.isEmpty(messages)) {\n            setTimeout(() => {\n                animateScroll.scrollToBottom({\n                    duration: 333,\n                    containerId: \"ce-feed-container\"\n                })\n            }, 100)\n\n            if (getMyLastMessage(conn.userName, chat) && getMyLastMessage(conn.userName, chat) !== chat.last_message.id) {\n                readMessage(conn, currentChat, chat.last_message.id, (chat) => onReadMessage(chat))\n            }\n        }\n    }, [messages, isBottomVisible])\n\n    if (conn === undefined) {\n        return <AuthFail {...props} />\n\n    } else if (conn && chats !== null && Object.values(chats).filter(a => a).length === 0) {\n        return <CreateChat conn={conn} />\n    }\n\n    return (\n        <div\n            className='ce-chat-feed'\n            style={{ height: '100%', maxHeight: '100vh', backgroundColor: '#f0f0f0' }}\n        >\n            {\n                props.renderChatHeader\n                    ? props.renderChatHeader(chat, {\n                        chatListIsOpen,\n                        setChatListIsOpen,\n                        chatSettingsIsOpen,\n                        setChatSettingsIsOpen,\n                    })\n                    : <ChatHeader\n                        setChatListIsOpen={setChatListIsOpen}\n                        setChatSettingsIsOpen={setChatSettingsIsOpen}\n                    />\n            }\n\n            <ChatListDrawer chatListIsOpen={chatListIsOpen} setChatListIsOpen={setChatListIsOpen} />\n            <ChatSettingsDrawer chatSettingsIsOpen={chatSettingsIsOpen} setChatSettingsIsOpen={setChatSettingsIsOpen} />\n\n            <div\n                id='ce-feed-container'\n                style={styles.feedContainer}\n                className='ce-chat-feed-container'\n            >\n                <div style={{ height: '88px' }} className='ce-feed-container-top' />\n\n                {Object.keys(messages).length > 0 && <RenderTrigger onEnter={() => setLoadMoreMessages(true)} />}\n\n                {needsIceBreaker && props.renderIceBreaker && props.renderIceBreaker(chat)}\n\n                {needsIceBreaker && !props.renderIceBreaker && <IceBreaker />}\n\n                <Messages {...props} />\n\n                {props.renderIsTyping ? props.renderIsTyping(typers) : <IsTyping />}\n\n                {props.renderConnectionBar ? props.renderConnectionBar(chat) : <ConnectionBar renderDelay={10000} />}\n\n                {props.renderScrollDownBar ? props.renderScrollDownBar(chat) : <ScrollDownBar chat={chat} renderDelay={3000} />}\n\n                <div style={{ height: '86px' }} className='ce-feed-container-bottom' />\n            </div>\n\n            {props.renderNewMessageForm ? props.renderNewMessageForm(props, currentChat) : <NewMessageForm />}\n        </div>\n    )\n}\n\nexport default ChatFeed\n\nconst styles = {\n    feedContainer: {\n        width: '100%',\n        height: '100%',\n        maxHeight: '100vh',\n        overflowX: 'hidden',\n        overflowY: 'scroll',\n        backgroundColor: 'white',\n    }\n}","import React, { useContext } from 'react'\n\nimport { ChatEngineContext } from '../Context'\n\nimport _ from 'lodash'\n\nimport { Socket } from '../Sockets'\n\nimport ChatList from './ChatList'\nimport ChatFeed from './ChatFeed'\nimport ChatSettings from './ChatSettings'\n\nimport { Row, Col } from 'react-grid-system'\nimport { setConfiguration } from 'react-grid-system';\n\n// TODO: One off imports for Teams tutorial\nimport { getLatestMessages } from 'react-chat-engine'\n \nsetConfiguration({ maxScreenClass: 'xs', gutterWidth: 0 });\n\nconst ChatEngine = props => {\n  const context = useContext(ChatEngineContext)\n  const { height } = props\n  const propsAndContext = {...props, ...context}\n  const eventProps = Object.keys(props)\n    .filter((key) => (key.match(/^on[A-Z][a-z]/)) && key !== 'onMessageSent')\n    .reduce((acc, key) => {\n      acc[key] = props[key];\n      return (acc);\n    }, {});\n\n  return (\n    <div\n      {...eventProps}\n      className='ce-chat-engine'\n      style={{ textAlign: 'left', backgroundColor: 'white' }}\n    >\n      <Socket {...props} />\n\n      <Row className='ce-wrapper'>\n        <Col xs={0} sm={3} style={{ height: height ? height : '' }} className='ce-chat-list-column'>\n          {\n            props.renderChatList ?\n            props.renderChatList(propsAndContext) :\n            <ChatList \n              {...propsAndContext} \n              // TODO: One off code for Teams tutorial\n              onChatClick={(chatID) => {\n                if (props.renderChatFeed) {\n                  getLatestMessages(\n                    props, chatID, 45,\n                    (id, list) => {\n                      context.setMessages({..._.mapKeys(list, 'created')})\n                    }\n                  )\n                }\n              }}\n            />\n          }\n        </Col>\n\n        <Col xs={12} sm={6} style={{ height: height ? height : '' }} className='ce-chat-feed-column'>\n          {\n            props.renderChatFeed ?\n            props.renderChatFeed(propsAndContext) :\n            <ChatFeed {...propsAndContext} />\n          }\n        </Col>\n\n        <Col xs={0} sm={3} style={{ height: height ? height : '' }} className='ce-settings-column'>\n          {\n            props.renderChatSettings ?\n            props.renderChatSettings(props) :\n            <ChatSettings { ...props} />\n          }\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default ChatEngine","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { stringToColor } from '../../../Utilities/colorMapping' \n\n\nexport default class Avatar extends Component {\n    state = { avatar: '' }  \n\n    updateImg() {\n        let { avatar } = this.props\n        avatar = avatar && avatar !== null ? avatar : ''\n        \n        if (avatar.split('?')[0] !== this.state.avatar.split('?')[0]) {\n            this.setState({ avatar })\n        }\n    }\n\n    componentDidMount() { this.updateImg() }\n\n    componentDidUpdate() { this.updateImg() }\n\n    render() {\n        const { username, is_online } = this.props\n        const customStyle = this.props.style ? this.props.style : {}\n        const text = username ? username.substring(0, 2).toUpperCase() : ''\n        const color = stringToColor(username)    \n                \n        return (\n            <div style={{ width: '48px', height: '48px' }}>\n                <div style={{ height: '0px' }}>\n                    <div \n                        className='ce-avatar'\n                        style={{ \n                            ...styles.avatar, \n                            ...customStyle, \n                            ...{ \n                                backgroundColor: this.state.avatar ? 'white' : color,\n                                backgroundImage: this.state.avatar && `url(${this.state.avatar})`,\n                                backgroundRepeat: 'no-repeat',\n                                backgroundPosition: 'center',\n                                backgroundSize: '48px',\n                            }\n                        }}\n                    >   \n                        <div \n                            className='ce-avatar-text'\n                            style={styles.avatarText}\n                        >\n                            { !this.state.avatar && text }\n                        </div>\n                    </div>\n                </div>\n\n                {\n                    this.props.show_online !== false && \n                    <div\n                        className='ce-avatar-status'\n                        style={{\n                            ...styles.status, \n                            ...{ backgroundColor: is_online ? '#52c41a' : '#f5222d' }\n                        }}\n                    />\n                }\n            </div>\n        )\n    }\n}\n\nconst styles = {\n    avatar: {\n        width: '44px',\n        height: '44px',\n        borderRadius: '22px',\n        color: 'white',\n        textAlign: 'center',\n    },\n    avatarText: {\n        color: 'white', \n        paddingTop: '12px', \n        fontSize: '15px', \n        fontWeight: '600'\n    },\n    status: { \n        width: '8px', \n        height: '8px', \n        borderRadius: '100%', \n        border: '2px solid white',   \n    }\n}\n\nAvatar.propTypes = {\n    avatar: PropTypes.string,\n    username: PropTypes.string,\n    style: PropTypes.object,\n    is_online: PropTypes.bool,\n    show_online: PropTypes.bool,\n}","import React, { useState } from 'react';\n\nimport { PaperClipOutlined } from '@ant-design/icons'\n\nconst ImagesInput = props => {\n    const [state, setState] = useState({\n        hovered: false,\n    })\n\n    function onSelect(event) {\n        const files = Array.from(event.target.files)\n        props.onSelectFiles &&  props.onSelectFiles(files)\n    }\n\n    return (\n        <div\n            className=\"uploader\"\n            encType=\"multipart/form-data\"\n            style={{ height: '0px' }}\n            className='ce-upload-document-form'\n        >\n            <label\n                htmlFor=\"files\"\n                id='ce-upload-document-button'\n            >\n                <PaperClipOutlined \n                    id='ce-upload-document-icon'\n                    onMouseEnter={() => setState({ ...state, hovered: true })}\n                    onMouseLeave={() => setState({ ...state, hovered: false })}\n                    style={{\n                        ...{ cursor: 'pointer', position: 'absolute', bottom: '20px', right: '63px', fontSize: '18px' },\n                        ...{ color: state.hovered ? '#69c0ff' : '#1890ff' }\n                    }}\n                />\n            </label>\n\n            <input\n               \n                id=\"files\"\n                accept=\"image/x-png,image/gif,image/jpeg\"\n                style={{ visibility: \"hidden\" }}\n                type=\"file\"\n                onChange={(e) => onSelect(e)}\n                onClick={(e) => e.target.value = null}\n            />\n        </div>\n    );\n}\n\nexport default ImagesInput\n","import React, { Component } from 'react'\n\nexport default class MessageInput extends Component {\n    state = {\n        value: null,\n        height: 0\n    }\n\n    resize() {\n        var textarea = document.getElementById(\"msg-textarea\");\n        textarea.style.height = \"\";\n        textarea.style.height = Math.min(textarea.scrollHeight, 150) + \"px\";\n        this.setState({ height: Math.min(textarea.scrollHeight, 150) })\n    }\n\n    componentDidMount() { this.resize() }\n\n    handleChange(e) {\n        this.resize()\n        this.props.handleChange && this.props.handleChange(e)\n    }\n\n    onKeyDown(e) {\n        if (e.key === 'Enter') { \n            e.preventDefault()\n\n            if (this.props.value.length > 0) {\n                this.props.onSubmit && this.props.onSubmit(e) \n            }\n        }\n    }    \n\n    render() {\n        return (\n            <input \n                id='msg-textarea'\n                className='ce-input ce-textarea-input'\n                style={styles.input}\n                value={this.props.value}\n                placeholder={this.props.label}\n                onChange={(e) => this.handleChange(e)} \n                onKeyDown={(e) => this.onKeyDown(e)}\n            />\n        )\n    }\n}\n\nconst styles = {\n    input: { \n        border: '1px solid white',\n        width: 'calc(100% - 100px)',\n        outline: 'none', \n        fontSize: '15px',\n        paddingLeft: '12px',\n        paddingRight: '12px',\n        position: 'relative', \n        left: '12px',\n        resize: 'none', \n        overflowX: 'hidden'\n    }\n}","import React, { useContext, useState } from 'react'\n\nimport { ChatEngineContext } from 'react-chat-engine'\n\nimport { sendMessage, isTyping } from 'react-chat-engine'\n\nimport FilesRow from '../NewMessageForm/FilesRow'\nimport ImagesRow from '../NewMessageForm/ImagesRow'\n\nimport ImagesInput from './ImagesInput'\nimport MessageInput from './MessageInput'\n\nconst MessageFormSocial = () => {\n  const { conn, activeChat, messages, setMessages, userCallbacks: { translate } } = useContext(ChatEngineContext)\n\n  const [iter, setIter] = useState(0) // Forces attachments update\n  const [value, setValue] = useState('')\n  const [trigger, setTrigger] = useState(0)\n  const [attachments, setAttachments] = useState([])\n\n  if (!conn || conn === null) return <div />\n\n  function onRemove(index) {\n    const newAttachments = attachments\n    newAttachments.splice(index, 1)\n    setAttachments(newAttachments)\n    setIter(iter + 1)\n  }\n  \n  function handleChange(e) {\n    setValue(e.target.value)\n    setTrigger((trigger + 1) % 4)\n    if (trigger === 1) { conn && isTyping(conn, activeChat) }\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (!conn) return \n\n    let text = value.trim()\n    if (text.length > 11 && text.slice(-11) === '<p><br></p>') { text = text.substr(0, text.length - 11) }\n\n    const custom_json = { sender_id: Date.now().toString() }\n    const sender_username = conn.userName ? conn.userName : conn.senderUsername\n    const created = new Date().toISOString().replace('T', ' ').replace('Z', `${Math.floor(Math.random() * 1000)}+00:00`)\n    const data = { text, attachments, custom_json, sender_username, chat: activeChat, created }\n\n    if (text.length > 0 || attachments.length > 0) {\n      sendMessage(conn, activeChat, data, () => {})\n    }\n\n    setValue('')\n    setAttachments([])\n\n    let newMessages = {...messages}\n    newMessages[data.created] = data\n    setMessages(newMessages)\n  }\n\n  return (\n    <div \n      id='ce-social-msg-form-container'\n      style={styles.messageFormContainer}\n      className='ce-social-message-form-container'\n    >\n      <ImagesRow files={attachments} onRemove={(i) => onRemove(i)} />\n\n      <FilesRow files={attachments} onRemove={(i) => onRemove(i)} />\n\n      <form \n        onSubmit={handleSubmit.bind(this)} \n        className='ce-social-message-form' \n        style={styles.messageForm}\n      >\n        <button \n            icon='send'\n            type=\"submit\"\n            id='ce-send-message-button'\n            style={styles.sendMessage}\n          >\n            <img \n              className=\"send-icon\" \n              style={styles.sendIcon}\n              src=\"https://chat-engine-assets.s3.amazonaws.com/send.png\" \n              alt=\"chat-engine-send-button\"\n            />\n        </button>\n      \n        <div style={styles.inputContainer} className='ce-message-input-form'>\n          <ImagesInput onSelectFiles={(attachments) => setAttachments(attachments)} />\n\n          <MessageInput\n            value={value}\n            label={translate('Send a message...', 'MessageFormSocial')}\n            handleChange={handleChange.bind(this)}\n            onSubmit={handleSubmit.bind(this)}\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default MessageFormSocial\n\nconst styles = {\n  messageFormContainer: { \n    position: 'absolute', \n    bottom: '0px', \n    width: '100%', \n    backgroundColor: 'white',\n  },\n  messageForm: {\n    paddingTop: \"22px\",\n    marginRight: \"10px\",\n    width: '100%',\n  },\n  inputContainer: { \n    minHeight: '36px',\n    paddingBottom: '16px',\n    width: '100%'\n  },\n  sendMessage: {\n    // Look + Feel\n    width: \"40px\",\n    height: \"40px\",\n    borderRadius: \"50%\",\n    borderWidth: \"0px\",\n    padding: \"0px\",\n    outline: \"none\",\n    color: \"white\",\n    backgroundColor: 'rgb(24, 144, 255)',\n    cursor: \"pointer\",\n    // Positioning\n    position: 'absolute',\n    bottom: '12px',\n    right: '10px',\n    zIndex: '10'\n  },\n  sendIcon: {\n    width: \"20px\",\n    transform: \"rotate(-20deg)\",\n    marginLeft: \"5px\",\n  }\n}","import React, { useContext } from 'react'\n\nimport ChatEngine from './ChatEngine'\n\nimport { ChatEngineWrapper, ChatEngineContext } from './Context'\n\nconst ChatEngineApp = (props) => {\n    if (useContext(ChatEngineContext)) {\n        return <ChatEngine {...props} />\n    } else {\n        return <ChatEngineWrapper {...props}><ChatEngine {...props} /></ChatEngineWrapper>\n    }\n    \n}\n\nexport default ChatEngineApp\n","import React, { useState } from 'react'\n\nimport SocketChild from './ChatSocket'\n\nconst ChatSocket = (props) => {\n  const [hide, setHide] = useState(false)\n\n  function reRender() {\n    setHide(true)\n    setTimeout(() => setHide(false), 100)\n  }\n\n  return (\n    <div>{!hide && <SocketChild {...props} reRender={() => reRender()} />}</div>\n  )\n}\n\nexport default ChatSocket\n","import axios from 'axios'\n\nimport * as str from '..'\nimport { getHeaders } from '../auth'\n\nexport function addPerson(props, chatId, userName, callback) {\n    axios.post(\n        `${str.getApiUrl(props)}/chats/${chatId}/people/`,\n        { username: userName },\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('New Person Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function deleteChat(props, chatId, callback) {\n    axios.delete(\n        `${str.getApiUrl(props)}/chats/${chatId}/`,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Delete Chat Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function deleteMessage(props, chatId, messageId, callback) {\n    axios.delete(\n        `${str.getApiUrl(props)}/chats/${chatId}/messages/${messageId}/`,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Delete Messages Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function editChat(props, chatId, data, callback) {\n    axios.patch(\n        `${str.getApiUrl(props)}/chats/${chatId}/`,\n        data, \n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Edit Chat Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function editMessage(props, chatId, messageId, data, callback) {\n    axios.patch(\n        `${str.getApiUrl(props)}/chats/${chatId}/messages/${messageId}/`,\n        data,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Delete Messages Error', error)\n    });\n}","import axios from 'axios'\n\nimport * as str from '..'\nimport { getHeaders } from '../auth'\n\nexport function editMyData(props, data, callback) {\n    axios.patch(\n        `${str.getApiUrl(props)}/chats/me/`,\n        data,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Edit Myself Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function getChat(props, chatId, callback) {\n    axios.get(\n        `${str.getApiUrl(props)}/chats/${chatId}/`,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Get Chat Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function getChats(props, callback) {\n    axios.get(\n        `${str.getApiUrl(props)}/chats/`,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        // Run hook in Axios on GET requests\n        props.onGetChats && props.onGetChats(response.data)\n\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Fetch Chats Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function getChatsBefore(props, before, count, callback) {\n    axios.put(\n        `${str.getApiUrl(props)}/chats/latest/${count}/`,\n        { before },\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        // Run hook in Axios on GET requests\n        props.onGetChats && props.onGetChats(response.data)\n\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Fetch Chats Before Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function getLatestChats(props, count, callback) {\n    axios.get(\n        `${str.getApiUrl(props)}/chats/latest/${count}/`,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        // Run hook in Axios on GET requests\n        props.onGetChats && props.onGetChats(response.data)\n\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Fetch Chats Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function getLatestMessages(props, chatId, count, callback) {\n    if (!getHeaders(props)) return;\n\n    axios.get(\n        `${str.getApiUrl(props)}/chats/${chatId}/messages/latest/${count}/`,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        props.onGetMessages && props.onGetMessages(chatId, response.data)\n\n        callback && callback(chatId, response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Fetch Latest Messages Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function getMessage(props, chatId, messageId, callback) {\n    axios.get(\n        `${str.getApiUrl(props)}/chats/${chatId}/messages/${messageId}/`,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(chatId, response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Fetch Message Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function getMessages(props, chatId, callback) {\n    axios.get(\n        `${str.getApiUrl(props)}/chats/${chatId}/messages/`,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        // Run hook in Axios on GET requests\n        props.onGetMessages && props.onGetMessages(chatId, response.data)\n\n        callback && callback(chatId, response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Fetch Messages Error', error)\n    });\n}","import axios from 'axios'\n\nimport * as str from '..'\nimport { getHeaders } from '../auth'\n\nexport function getMyData(props, callback) {\n    axios.get(\n        `${str.getApiUrl(props)}/users/me/`,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Get Myself Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function getOrCreateChat(props, data, callback) {\n    axios.put(\n        `${str.getApiUrl(props)}/chats/`,\n        data,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Get or Create Chat Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function getOtherPeople(props, chatId, successCallback, errorCallback) {\n    axios.get(\n        `${str.getApiUrl(props)}/chats/${chatId}/others/`,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        // Run hook in Axios on GET requests\n        props.onGetOtherPeople && props.onGetOtherPeople(chatId, response.data)\n\n        successCallback && successCallback(chatId, response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Fetch Other People Error', error)\n\n        errorCallback && errorCallback()\n    });\n}","import axios from 'axios'\n\nimport * as str from '..'\nimport { getHeaders } from '../auth'\n\nexport function isTyping(props, chatId, callback) {\n    axios.post(\n        `${str.getApiUrl(props)}/chats/${chatId}/typing/`,\n        {},\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {});\n}","import axios from 'axios'\nimport * as str from '..'\nimport { getHeaders } from '../auth'\n\nexport function leaveChat(props, chatId, callback) {\n    axios.delete(\n        `${str.getApiUrl(props)}/chats/${chatId}/people/`,\n        { headers: getHeaders(props)}\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Delete Person Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function readMessage(props, chatId, messageId, callback) {\n    axios.patch(\n        `${str.getApiUrl(props)}/chats/${chatId}/people/`,\n        { last_read: messageId },\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Read Message Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '..'\nimport { getHeaders } from '../auth'\n\nexport function removePerson(props, chatId, userName, callback) {\n    axios.put(\n        `${str.getApiUrl(props)}/chats/${chatId}/people/`,\n        { username: userName },\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Delete Person Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function sendMessage(props, chatId, data, callback) {\n    let formdata = new FormData()\n    \n    if (data.attachments) {\n        for (let i = 0; i < data.attachments.length; i++) { \n            formdata.append('attachments', data.attachments[i], data.attachments[i].name)\n        }\n    } else if (data.files) {\n        for (let i = 0; i < data.files.length; i++) { \n            formdata.append('attachments', data.files[i], data.files[i].name)\n        }\n    }\n\n    if (data.created) {\n        formdata.append('created', data.created)\n    }\n\n    formdata.append('text', data.text)\n    formdata.append('sender_username', data.sender_username)\n    formdata.append('custom_json', JSON.stringify(data.custom_json ? data.custom_json : {}))\n    \n    axios.post(\n        `${str.getApiUrl(props)}/chats/${chatId}/messages/`,\n        formdata,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Send Messages Error', error)\n    });\n    \n}"],"names":["getDateTime","date","Date","dateObj","isNaN","getFullYear","replace","formatTime","time","toLocaleString","split","slice","formatDate","ChatEngineContext","createContext","ChatEngineWrapper","props","_useState","useState","connecting","setConnecting","_useState2","conn","setConn","_useState3","creds","setCreds","_useState4","sessionToken","setSessionToken","_useState5","chats","setChats","_useState6","messages","setMessages","_useState7","activeChat","setActiveChat","_useState8","typingCounter","setTypingCounter","_useState9","loadMoreMessages","setLoadMoreMessages","_useState10","React","createElement","Provider","value","isBottomVisible","setIsBottomVisible","userCallbacks","translate","text","component","dom","translated","formatDateTime","format","internalFormatDate","internalFormatTime","internalFormatDateTime","toString","substr","internalFormatDateTimeAgo","openAttachment","attachment","type","window","open","file","htmlMessageTransform","onMessageSent","children","getApiUrl","development","getHeaders","chatID","public-key","publicKey","projectID","chat-id","access-key","chatAccessKey","Public-Key","User-Name","userName","User-Secret","userPassword","userSecret","DataLoader","didMountRef","useRef","_useContext","useContext","useEffect","current","getSession","callback","errorFunc","axios","get","str","headers","then","response","data","error","console","log","getOrCreateSession","token","e","status","undefined","onFailAuth","setTimeout","getLatestChats","sortedChats","Object","values","sort","a","b","aDate","last_message","created","getTime","sortChats","activeChatID","parseInt","id","_","mapKeys","getLatestMessages","list","onGetChats","socketRef","pingIntervalID","timeIntervalID","reconnect","now","Socket","setNow","shouldPongBy","setShouldPongBy","handleEditChat","chat","newChats","_extends","onEditChat","reRender","clearInterval","WebSocket","url","reconnectIntervalInMilliSeconds","childRef","ref","onOpen","setInterval","sendMessage","JSON","stringify","renderChatFeed","onConnect","bind","onError","onMessage","event","eventJSON","parse","action","onNewChat","isEmpty","onDeleteChat","onAddPerson","onRemovePerson","_eventJSON$data","message","newMessages","sender_username","readMessage","onNewMessage","_eventJSON$data2","onEditMessage","_eventJSON$data3","onDeleteMessage","_extends2","_extends3","_eventJSON$data4","person","newTypingCounter","onTyping","Promise","resolve","reject","onClose","hide","setHide","SocketChild","getChat","onGetChat","ChatLoader","setIntersecting","observer","IntersectionObserver","_ref","entry","isIntersecting","onVisible","observe","disconnect","useOnScreen","style","textAlign","backgroundColor","margin","borderRadius","LoadingOutlined","fontSize","padding","NewChatForm","setValue","selected","setSelected","height","CloseOutlined","styles","closeIcon","onClick","className","newChatContainer","marginLeft","onSubmit","preventDefault","trim","length","newChat","title","TextInput","autoFocus","label","onBlur","width","handleChange","target","fontWeight","position","top","Button","icon","left","ChatCard","chatContainer","titleText","animation","loadingBar","marginBottom","messageText","float","marginTop","paddingBottom","cursor","whiteSpace","overflow","color","display","Boop","_ref$triggers","triggers","_useBoop","_ref$x","x","_ref$y","y","_ref$rotation","rotation","_ref$scale","scale","_ref$timing","timing","_ref$springConfig","springConfig","tension","friction","_ref$width","_React$useState","isBooped","setIsBooped","useSpring","backfaceVisibility","transform","config","timeoutId","clearTimeout","useCallback","useBoop","_objectWithoutPropertiesLoose","_excluded","trigger","isTriggerPresent","indexOf","animated","span","onMouseEnter","onMouseLeave","htmlToText","require","_useContext$userCallb","loading","Loading","spinnerDiv","spinner","border","borderTop","marginRight","extraStyle","otherPerson","people","find","username","is_direct_chat","lastMessage","didReadLastMessage","map","chat_person","last_read","attachments","overflowX","ChatList","latestChatLoading","setLatestChatLoading","loadChats","setLoadChats","hasMoreChats","setHasMoreChats","chatList","anyLoading","useMemo","bDate","oldChats","allChats","filter","getChatsBefore","chatListContainer","chatsContainer","renderNewChatForm","index","renderChatCard","key","onChatClick","renderChats","maxHeight","borderRight","AuthFail","paddingTop","maxWidth","src","alt","post","_Component","_this","_len","arguments","args","Array","_key","call","apply","concat","state","focused","_inheritsLoose","_proto","prototype","componentDidMount","this","setState","render","_this2","placeholder","focusInput","input","onFocus","onChange","Component","outline","boxSizing","propTypes","default","PropTypes","string","oneOf","bool","object","func","AutoCompleteInput","showAll","getNames","count","max","results","options","option","toLowerCase","push","renderOptions","_this3","renderOption","close","_this4","customStyle","defaultStyle","arrayOf","number","hovered","_this$props","theme","dangerButton","button","hoverButton","PlusOutlined","DeleteOutlined","UserAddOutlined","_dangerButton","opacity","CreateChat","setTitle","class","IceBreaker","RenderTrigger","onEnter","onLeave","ChatListDrawer","setIsOpen","MenuOutlined","PersonRow","Avatar","avatar","is_online","paddingLeft","first_name","last_name","renderPersonText","admin","bottom","removePerson","isRequired","PersonOption","setFocused","_props$person","PersonForm","others","getOthers","getOtherPeople","addPerson","SettingsBlock","collapsed","setCollapsed","setHovered","transition","alwaysOpen","LeftOutlined","right","PeopleSettings","chatPerson","renderChatPeople","images","isImage","fileName","dotSplit","getFileName","fileUrl","slashSplit","Thumbnail","container","image","objectFit","PhotosSettings","OptionsSettings","deleteChat","NewMessageForm","editChat","ChatSettingsTop","topPeople","renderOnePerson","show_online","renderTwoPeople","renderThreePeople","TitleForm","ChatSettings","settingsContainer","renderChatSettingsTop","renderPeopleSettings","renderPhotosSettings","renderOptionsSettings","_settingsContainer","borderLeft","flex","ChatSettingsDrawer","SettingOutlined","setConfiguration","maxScreenClass","gutterWidth","ChatHeader","dateTime","Row","titleSection","Col","xs","sm","mobileOptiom","ChatListDrawerButton","setChatListIsOpen","titleContainer","subtitleText","ChatSettingsDrawerButton","setChatSettingsIsOpen","zIndex","chatListIsOpen","context","allProps","drawerContainer","renderChatList","chatSettingsIsOpen","renderChatSettings","flexFlow","DatePartition","lastCreated","getDate","lastDate","thisDate","dateText","thumbnail","loadingContainer","_loadingContainer","minHeight","minWidth","_thumbnail","paddingRight","FileView","fileView","FileOutlined","colors","stringToColor","sum","i","charCodeAt","stringToNumber","Dot","updateImg","componentDidUpdate","dot","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","visible","WebkitTransition","MozTransition","Body","replaceAll","myMessage","parserOptions","ReactHtmlParser","Message","nextMessage","name","renderImages","renderFiles","md","timeTag","sending","overflowWrap","TheirMessage","nameText","sender","theirMessage","renderReads","offset","senderUsername","MyMessage","Messages","keys","lastMessageKey","nextMessageKey","renderMessageBubble","MessageBubble","IsTyping","currentTime","setCurrentTime","typers","FilePreview","filePreview","CloseCircleTwoTone","onRemove","FilesRow","files","lenth","blob","setBlob","URL","createObjectURL","imageSquare","ImagesRow","AttachmentsInput","encType","htmlFor","PaperClipOutlined","multiple","visibility","accept","from","onSelectFiles","background","SendButton","setHover","ArrowUpOutlined","modules","toolbar","formats","FormHtmlEditor","document","quill","Quill","onKeyDown","keyCode","onAttach","iter","setIter","setTrigger","setAttachments","newAttachments","splice","NewMessageFormContainer","NextQuill","isTyping","custom_json","sender_id","toISOString","Math","floor","random","createdAt","senderId","ConnectionBar","isVisible","setIsVisible","renderDelay","SyncOutlined","spin","ScrollDownBar","lastReadMessage","animateScroll","scrollToBottom","duration","containerId","CaretDownOutlined","ChatFeed","hasFetchedMessages","setHasFetchedMessages","currentChat","setCurrentChat","needsIceBreaker","onReadMessage","onGetMessages","chatId","scrollDownTo","loadMessages","getMyLastMessage","renderChatHeader","feedContainer","renderIceBreaker","renderIsTyping","renderConnectionBar","renderScrollDownBar","renderNewMessageForm","overflowY","ChatEngine","propsAndContext","eventProps","match","reduce","acc","substring","toUpperCase","avatarText","ImagesInput","_React$createElement","MessageInput","resize","textarea","getElementById","min","scrollHeight","messageFormContainer","messageForm","inputContainer","borderWidth","sendIcon","handleSubmit","messageId","patch","before","put","successCallback","errorCallback","onGetOtherPeople","formdata","FormData","append"],"mappings":"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"}